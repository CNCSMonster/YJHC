symbol add -n 33
INIT IF_SYMBOL ELIF_SYMBOL ELSE_SYMBOL WHILE_SYMBOL DO_SYMBOL
FOR_SYMBOL WHILE_OF_DO BLOCK_IN SENTENCE_IN LEFTBRA LEFTPAR
DO_WHILE_BLOCK_IN DO_WHILE_BLOCK_OUT DO_WHILE_CASE_IN DO_WHILE_CASE_OUT IF_CASE_IN IF_CASE_OUT
IF_BLOCK_IN IF_BLOCK_OUT ELIF_CASE_IN ELIF_CASE_OUT ELIF_BLOCK_IN ELIF_BLOCK_OUT
ELSE_BLOCK_IN WHILE_CASE_IN WHILE_CASE_OUT WHILE_BLOCK_IN FOR_INIT_IN FOR_CONDITION_IN
FOR_REFRESH_IN FOR_REFRESH_END FOR_BODY_IN
token add -n 26
TYPE CONST VAR TYPEDEF_KEYWORD CONST_KEYWORD IF
ELIF ELSE DO WHILE FOR RETURN
BREAK CONTINUE OP LEFT_PAR RIGHT_PAR LEFT_BRACKET
RIGHT_BRACKET LEFT_BRACE RIGHT_BRACE SEMICOLON COMMA FUNC
UNKNOWN SELF_KEYWORD
actionkind add -n 7
PrintAction BlockAction StackPopAction StackPushAction SplitPreAction SplitAfterAction
PrintTblAction
action add PrintTblAction
PRINT_TBL_PRE PRINT_TBL_AFTER
set defaultAction PrintTblAction
NOT_DEFINE
syntax add PrintTblAction -n 16
PrintTblAction:IF_BLOCK_IN,RIGHT_BRACE,PRINT_TBL_AFTER
PrintTblAction:BLOCK_IN,RIGHT_BRACE,PRINT_TBL_AFTER
PrintTblAction:ELIF_BLOCK_OUT,ELSE,PRINT_TBL_PRE
PrintTblAction:ELIF_BLOCK_OUT,ELIF,PRINT_TBL_PRE
PrintTblAction:ELSE_SYMBOL,LEFT_BRACE,PRINT_TBL_PRE
PrintTblAction:WHILE_SYMBOL,LEFT_PAR,PRINT_TBL_PRE
PrintTblAction:DO_SYMBOL,LEFT_BRACE,PRINT_TBL_PRE
PrintTblAction:ELIF_SYMBOL,LEFT_PAR,PRINT_TBL_PRE
PrintTblAction:IF_SYMBOL,LEFT_PAR,PRINT_TBL_PRE
PrintTblAction:FOR_SYMBOL,LEFT_PAR,PRINT_TBL_PRE
PrintTblAction:SENTENCE_IN,SEMICOLON,PRINT_TBL_PRE
PrintTblAction:WHILE_BLOCK_IN,RIGHT_BRACE,PRINT_TBL_AFTER
PrintTblAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,PRINT_TBL_AFTER
PrintTblAction:FOR_BODY_IN,RIGHT_BRACE,PRINT_TBL_AFTER
PrintTblAction:ELIF_BLOCK_IN,RIGHT_BRACE,PRINT_TBL_AFTER
PrintTblAction:ELSE_BLOCK_IN,RIGHT_BRACE,PRINT_TBL_AFTER
action add SplitAfterAction
SPLITAFTER
set defaultAction SplitAfterAction
NOT_DEFINE
syntax add SplitAfterAction -n 37
SplitAfterAction:WHILE_OF_DO,LEFT_PAR,SPLITAFTER
SplitAfterAction:DO_WHILE_BLOCK_IN,FOR,SPLITAFTER
SplitAfterAction:WHILE_BLOCK_IN,FOR,SPLITAFTER
SplitAfterAction:FOR_BODY_IN,FOR,SPLITAFTER
SplitAfterAction:ELSE_BLOCK_IN,FOR,SPLITAFTER
SplitAfterAction:ELIF_BLOCK_IN,FOR,SPLITAFTER
SplitAfterAction:IF_BLOCK_IN,FOR,SPLITAFTER
SplitAfterAction:BLOCK_IN,FOR,SPLITAFTER
SplitAfterAction:DO_WHILE_BLOCK_IN,WHILE,SPLITAFTER
SplitAfterAction:WHILE_BLOCK_IN,WHILE,SPLITAFTER
SplitAfterAction:FOR_BODY_IN,WHILE,SPLITAFTER
SplitAfterAction:ELSE_BLOCK_IN,WHILE,SPLITAFTER
SplitAfterAction:ELIF_BLOCK_IN,WHILE,SPLITAFTER
SplitAfterAction:IF_BLOCK_IN,WHILE,SPLITAFTER
SplitAfterAction:BLOCK_IN,WHILE,SPLITAFTER
SplitAfterAction:DO_WHILE_BLOCK_IN,DO,SPLITAFTER
SplitAfterAction:WHILE_BLOCK_IN,DO,SPLITAFTER
SplitAfterAction:FOR_BODY_IN,DO,SPLITAFTER
SplitAfterAction:ELSE_BLOCK_IN,DO,SPLITAFTER
SplitAfterAction:ELIF_BLOCK_IN,DO,SPLITAFTER
SplitAfterAction:IF_BLOCK_IN,DO,SPLITAFTER
SplitAfterAction:BLOCK_IN,DO,SPLITAFTER
SplitAfterAction:DO_WHILE_BLOCK_IN,IF,SPLITAFTER
SplitAfterAction:WHILE_BLOCK_IN,IF,SPLITAFTER
SplitAfterAction:FOR_BODY_IN,IF,SPLITAFTER
SplitAfterAction:ELSE_BLOCK_IN,IF,SPLITAFTER
SplitAfterAction:ELIF_BLOCK_IN,IF,SPLITAFTER
SplitAfterAction:IF_BLOCK_IN,IF,SPLITAFTER
SplitAfterAction:BLOCK_IN,IF,SPLITAFTER
SplitAfterAction:DO_SYMBOL,LEFT_BRACE,SPLITAFTER
SplitAfterAction:FOR_CONDITION_IN,SEMICOLON,SPLITAFTER
SplitAfterAction:FOR_INIT_IN,SEMICOLON,SPLITAFTER
SplitAfterAction:FOR_SYMBOL,LEFT_PAR,SPLITAFTER
SplitAfterAction:DO_WHILE_BLOCK_OUT,LEFT_PAR,SPLITAFTER
SplitAfterAction:WHILE_SYMBOL,LEFT_PAR,SPLITAFTER
SplitAfterAction:ELIF_SYMBOL,LEFT_PAR,SPLITAFTER
SplitAfterAction:IF_SYMBOL,LEFT_PAR,SPLITAFTER
action add SplitPreAction
SPLITPRE
set defaultAction SplitPreAction
NOT_DEFINE
syntax add SplitPreAction -n 319
SplitPreAction:DO_WHILE_BLOCK_IN,FOR,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,FOR,SPLITPRE
SplitPreAction:FOR_BODY_IN,FOR,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,FOR,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,FOR,SPLITPRE
SplitPreAction:IF_BLOCK_IN,FOR,SPLITPRE
SplitPreAction:BLOCK_IN,FOR,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,WHILE,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,WHILE,SPLITPRE
SplitPreAction:FOR_BODY_IN,WHILE,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,WHILE,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,WHILE,SPLITPRE
SplitPreAction:IF_BLOCK_IN,WHILE,SPLITPRE
SplitPreAction:BLOCK_IN,WHILE,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,DO,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,DO,SPLITPRE
SplitPreAction:FOR_BODY_IN,DO,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,DO,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,DO,SPLITPRE
SplitPreAction:IF_BLOCK_IN,DO,SPLITPRE
SplitPreAction:BLOCK_IN,DO,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,IF,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,IF,SPLITPRE
SplitPreAction:FOR_BODY_IN,IF,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,IF,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,IF,SPLITPRE
SplitPreAction:IF_BLOCK_IN,IF,SPLITPRE
SplitPreAction:BLOCK_IN,IF,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,SELF_KEYWORD,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,CONST,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,CONST_KEYWORD,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,OP,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,BREAK,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,CONTINUE,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,RETURN,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,VAR,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,FUNC,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,TYPE,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,SELF_KEYWORD,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,CONST,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,CONST_KEYWORD,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,OP,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,BREAK,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,CONTINUE,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,RETURN,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,VAR,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,FUNC,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,TYPE,SPLITPRE
SplitPreAction:FOR_BODY_IN,SELF_KEYWORD,SPLITPRE
SplitPreAction:FOR_BODY_IN,CONST,SPLITPRE
SplitPreAction:FOR_BODY_IN,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:FOR_BODY_IN,CONST_KEYWORD,SPLITPRE
SplitPreAction:FOR_BODY_IN,OP,SPLITPRE
SplitPreAction:FOR_BODY_IN,BREAK,SPLITPRE
SplitPreAction:FOR_BODY_IN,RETURN,SPLITPRE
SplitPreAction:FOR_BODY_IN,CONTINUE,SPLITPRE
SplitPreAction:FOR_BODY_IN,FUNC,SPLITPRE
SplitPreAction:FOR_BODY_IN,VAR,SPLITPRE
SplitPreAction:FOR_BODY_IN,TYPE,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,SELF_KEYWORD,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,CONST,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,CONST_KEYWORD,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,OP,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,BREAK,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,RETURN,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,CONTINUE,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,FUNC,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,VAR,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,TYPE,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,SELF_KEYWORD,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,CONST,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,CONST_KEYWORD,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,OP,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,BREAK,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,RETURN,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,CONTINUE,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,FUNC,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,VAR,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,TYPE,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,SELF_KEYWORD,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,CONST,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,CONST_KEYWORD,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,OP,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,BREAK,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,RETURN,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,CONTINUE,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,FUNC,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,VAR,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,TYPE,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,CONST_KEYWORD,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,OP,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,BREAK,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,RETURN,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,CONTINUE,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,FUNC,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,VAR,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,TYPE,SPLITPRE
SplitPreAction:IF_BLOCK_IN,SELF_KEYWORD,SPLITPRE
SplitPreAction:IF_BLOCK_IN,CONST,SPLITPRE
SplitPreAction:IF_BLOCK_IN,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:IF_BLOCK_IN,CONST_KEYWORD,SPLITPRE
SplitPreAction:IF_BLOCK_IN,OP,SPLITPRE
SplitPreAction:IF_BLOCK_IN,BREAK,SPLITPRE
SplitPreAction:IF_BLOCK_IN,RETURN,SPLITPRE
SplitPreAction:IF_BLOCK_IN,CONTINUE,SPLITPRE
SplitPreAction:IF_BLOCK_IN,FUNC,SPLITPRE
SplitPreAction:IF_BLOCK_IN,VAR,SPLITPRE
SplitPreAction:IF_BLOCK_IN,TYPE,SPLITPRE
SplitPreAction:BLOCK_IN,SELF_KEYWORD,SPLITPRE
SplitPreAction:BLOCK_IN,CONST,SPLITPRE
SplitPreAction:BLOCK_IN,TYPEDEF_KEYWORD,SPLITPRE
SplitPreAction:BLOCK_IN,CONST_KEYWORD,SPLITPRE
SplitPreAction:BLOCK_IN,OP,SPLITPRE
SplitPreAction:BLOCK_IN,BREAK,SPLITPRE
SplitPreAction:BLOCK_IN,CONTINUE,SPLITPRE
SplitPreAction:BLOCK_IN,RETURN,SPLITPRE
SplitPreAction:BLOCK_IN,FUNC,SPLITPRE
SplitPreAction:BLOCK_IN,VAR,SPLITPRE
SplitPreAction:BLOCK_IN,TYPE,SPLITPRE
SplitPreAction:IF_CASE_OUT,LEFT_BRACE,SPLITPRE
SplitPreAction:BLOCK_IN,RIGHT_BRACE,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,RIGHT_BRACE,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,RIGHT_BRACE,SPLITPRE
SplitPreAction:IF_BLOCK_IN,RIGHT_BRACE,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,RIGHT_BRACE,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,SPLITPRE
SplitPreAction:FOR_BODY_IN,RIGHT_BRACE,SPLITPRE
SplitPreAction:FOR_REFRESH_IN,RIGHT_PAR,SPLITPRE
SplitPreAction:FOR_CONDITION_IN,SEMICOLON,SPLITPRE
SplitPreAction:FOR_INIT_IN,SEMICOLON,SPLITPRE
SplitPreAction:FOR_SYMBOL,LEFT_PAR,SPLITPRE
SplitPreAction:ELSE_SYMBOL,LEFT_BRACE,SPLITPRE
SplitPreAction:ELIF_SYMBOL,LEFT_PAR,SPLITPRE
SplitPreAction:IF_SYMBOL,LEFT_PAR,SPLITPRE
SplitPreAction:WHILE_OF_DO,LEFT_PAR,SPLITPRE
SplitPreAction:WHILE_SYMBOL,LEFT_PAR,SPLITPRE
SplitPreAction:DO_WHILE_CASE_OUT,SEMICOLON,SPLITPRE
SplitPreAction:DO_WHILE_CASE_IN,RIGHT_PAR,SPLITPRE
SplitPreAction:WHILE_CASE_IN,RIGHT_PAR,SPLITPRE
SplitPreAction:ELIF_CASE_IN,RIGHT_PAR,SPLITPRE
SplitPreAction:IF_CASE_IN,RIGHT_PAR,SPLITPRE
SplitPreAction:SENTENCE_IN,SEMICOLON,SPLITPRE
SplitPreAction:FOR_REFRESH_END,DO,SPLITPRE
SplitPreAction:FOR_REFRESH_IN,DO,SPLITPRE
SplitPreAction:FOR_CONDITION_IN,DO,SPLITPRE
SplitPreAction:FOR_INIT_IN,DO,SPLITPRE
SplitPreAction:WHILE_CASE_OUT,DO,SPLITPRE
SplitPreAction:WHILE_CASE_IN,DO,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,DO,SPLITPRE
SplitPreAction:ELIF_CASE_OUT,DO,SPLITPRE
SplitPreAction:ELIF_CASE_IN,DO,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,DO,SPLITPRE
SplitPreAction:IF_CASE_OUT,DO,SPLITPRE
SplitPreAction:IF_CASE_IN,DO,SPLITPRE
SplitPreAction:DO_WHILE_CASE_OUT,DO,SPLITPRE
SplitPreAction:DO_WHILE_CASE_IN,DO,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_OUT,DO,SPLITPRE
SplitPreAction:LEFTPAR,DO,SPLITPRE
SplitPreAction:LEFTBRA,DO,SPLITPRE
SplitPreAction:SENTENCE_IN,DO,SPLITPRE
SplitPreAction:WHILE_OF_DO,DO,SPLITPRE
SplitPreAction:FOR_SYMBOL,DO,SPLITPRE
SplitPreAction:DO_SYMBOL,DO,SPLITPRE
SplitPreAction:WHILE_SYMBOL,DO,SPLITPRE
SplitPreAction:ELSE_SYMBOL,DO,SPLITPRE
SplitPreAction:ELIF_SYMBOL,DO,SPLITPRE
SplitPreAction:IF_SYMBOL,DO,SPLITPRE
SplitPreAction:INIT,DO,SPLITPRE
SplitPreAction:FOR_REFRESH_END,WHILE,SPLITPRE
SplitPreAction:FOR_REFRESH_IN,WHILE,SPLITPRE
SplitPreAction:FOR_CONDITION_IN,WHILE,SPLITPRE
SplitPreAction:FOR_INIT_IN,WHILE,SPLITPRE
SplitPreAction:WHILE_CASE_OUT,WHILE,SPLITPRE
SplitPreAction:WHILE_CASE_IN,WHILE,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,WHILE,SPLITPRE
SplitPreAction:ELIF_CASE_OUT,WHILE,SPLITPRE
SplitPreAction:ELIF_CASE_IN,WHILE,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,WHILE,SPLITPRE
SplitPreAction:IF_CASE_OUT,WHILE,SPLITPRE
SplitPreAction:IF_CASE_IN,WHILE,SPLITPRE
SplitPreAction:DO_WHILE_CASE_OUT,WHILE,SPLITPRE
SplitPreAction:DO_WHILE_CASE_IN,WHILE,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_OUT,WHILE,SPLITPRE
SplitPreAction:LEFTPAR,WHILE,SPLITPRE
SplitPreAction:LEFTBRA,WHILE,SPLITPRE
SplitPreAction:SENTENCE_IN,WHILE,SPLITPRE
SplitPreAction:WHILE_OF_DO,WHILE,SPLITPRE
SplitPreAction:FOR_SYMBOL,WHILE,SPLITPRE
SplitPreAction:DO_SYMBOL,WHILE,SPLITPRE
SplitPreAction:WHILE_SYMBOL,WHILE,SPLITPRE
SplitPreAction:ELSE_SYMBOL,WHILE,SPLITPRE
SplitPreAction:ELIF_SYMBOL,WHILE,SPLITPRE
SplitPreAction:IF_SYMBOL,WHILE,SPLITPRE
SplitPreAction:INIT,WHILE,SPLITPRE
SplitPreAction:FOR_REFRESH_END,FOR,SPLITPRE
SplitPreAction:FOR_REFRESH_IN,FOR,SPLITPRE
SplitPreAction:FOR_CONDITION_IN,FOR,SPLITPRE
SplitPreAction:FOR_INIT_IN,FOR,SPLITPRE
SplitPreAction:WHILE_CASE_OUT,FOR,SPLITPRE
SplitPreAction:WHILE_CASE_IN,FOR,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,FOR,SPLITPRE
SplitPreAction:ELIF_CASE_OUT,FOR,SPLITPRE
SplitPreAction:ELIF_CASE_IN,FOR,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,FOR,SPLITPRE
SplitPreAction:IF_CASE_OUT,FOR,SPLITPRE
SplitPreAction:IF_CASE_IN,FOR,SPLITPRE
SplitPreAction:DO_WHILE_CASE_OUT,FOR,SPLITPRE
SplitPreAction:DO_WHILE_CASE_IN,FOR,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_OUT,FOR,SPLITPRE
SplitPreAction:LEFTPAR,FOR,SPLITPRE
SplitPreAction:LEFTBRA,FOR,SPLITPRE
SplitPreAction:SENTENCE_IN,FOR,SPLITPRE
SplitPreAction:WHILE_OF_DO,FOR,SPLITPRE
SplitPreAction:FOR_SYMBOL,FOR,SPLITPRE
SplitPreAction:DO_SYMBOL,FOR,SPLITPRE
SplitPreAction:WHILE_SYMBOL,FOR,SPLITPRE
SplitPreAction:ELSE_SYMBOL,FOR,SPLITPRE
SplitPreAction:ELIF_SYMBOL,FOR,SPLITPRE
SplitPreAction:IF_SYMBOL,FOR,SPLITPRE
SplitPreAction:INIT,FOR,SPLITPRE
SplitPreAction:FOR_BODY_IN,ELIF,SPLITPRE
SplitPreAction:FOR_REFRESH_END,ELIF,SPLITPRE
SplitPreAction:FOR_REFRESH_IN,ELIF,SPLITPRE
SplitPreAction:FOR_CONDITION_IN,ELIF,SPLITPRE
SplitPreAction:FOR_INIT_IN,ELIF,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,ELIF,SPLITPRE
SplitPreAction:WHILE_CASE_OUT,ELIF,SPLITPRE
SplitPreAction:WHILE_CASE_IN,ELIF,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,ELIF,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,ELIF,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,ELIF,SPLITPRE
SplitPreAction:ELIF_CASE_OUT,ELIF,SPLITPRE
SplitPreAction:ELIF_CASE_IN,ELIF,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,ELIF,SPLITPRE
SplitPreAction:IF_BLOCK_IN,ELIF,SPLITPRE
SplitPreAction:IF_CASE_OUT,ELIF,SPLITPRE
SplitPreAction:IF_CASE_IN,ELIF,SPLITPRE
SplitPreAction:DO_WHILE_CASE_OUT,ELIF,SPLITPRE
SplitPreAction:DO_WHILE_CASE_IN,ELIF,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_OUT,ELIF,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,ELIF,SPLITPRE
SplitPreAction:LEFTPAR,ELIF,SPLITPRE
SplitPreAction:LEFTBRA,ELIF,SPLITPRE
SplitPreAction:SENTENCE_IN,ELIF,SPLITPRE
SplitPreAction:BLOCK_IN,ELIF,SPLITPRE
SplitPreAction:WHILE_OF_DO,ELIF,SPLITPRE
SplitPreAction:FOR_SYMBOL,ELIF,SPLITPRE
SplitPreAction:DO_SYMBOL,ELIF,SPLITPRE
SplitPreAction:WHILE_SYMBOL,ELIF,SPLITPRE
SplitPreAction:ELSE_SYMBOL,ELIF,SPLITPRE
SplitPreAction:ELIF_SYMBOL,ELIF,SPLITPRE
SplitPreAction:IF_SYMBOL,ELIF,SPLITPRE
SplitPreAction:INIT,ELIF,SPLITPRE
SplitPreAction:FOR_BODY_IN,ELSE,SPLITPRE
SplitPreAction:FOR_REFRESH_END,ELSE,SPLITPRE
SplitPreAction:FOR_REFRESH_IN,ELSE,SPLITPRE
SplitPreAction:FOR_CONDITION_IN,ELSE,SPLITPRE
SplitPreAction:FOR_INIT_IN,ELSE,SPLITPRE
SplitPreAction:WHILE_BLOCK_IN,ELSE,SPLITPRE
SplitPreAction:WHILE_CASE_OUT,ELSE,SPLITPRE
SplitPreAction:WHILE_CASE_IN,ELSE,SPLITPRE
SplitPreAction:ELSE_BLOCK_IN,ELSE,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,ELSE,SPLITPRE
SplitPreAction:ELIF_BLOCK_IN,ELSE,SPLITPRE
SplitPreAction:ELIF_CASE_OUT,ELSE,SPLITPRE
SplitPreAction:ELIF_CASE_IN,ELSE,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,ELSE,SPLITPRE
SplitPreAction:IF_BLOCK_IN,ELSE,SPLITPRE
SplitPreAction:IF_CASE_OUT,ELSE,SPLITPRE
SplitPreAction:IF_CASE_IN,ELSE,SPLITPRE
SplitPreAction:DO_WHILE_CASE_OUT,ELSE,SPLITPRE
SplitPreAction:DO_WHILE_CASE_IN,ELSE,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_OUT,ELSE,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_IN,ELSE,SPLITPRE
SplitPreAction:LEFTPAR,ELSE,SPLITPRE
SplitPreAction:LEFTBRA,ELSE,SPLITPRE
SplitPreAction:SENTENCE_IN,ELSE,SPLITPRE
SplitPreAction:BLOCK_IN,ELSE,SPLITPRE
SplitPreAction:WHILE_OF_DO,ELSE,SPLITPRE
SplitPreAction:FOR_SYMBOL,ELSE,SPLITPRE
SplitPreAction:DO_SYMBOL,ELSE,SPLITPRE
SplitPreAction:WHILE_SYMBOL,ELSE,SPLITPRE
SplitPreAction:ELSE_SYMBOL,ELSE,SPLITPRE
SplitPreAction:ELIF_SYMBOL,ELSE,SPLITPRE
SplitPreAction:IF_SYMBOL,ELSE,SPLITPRE
SplitPreAction:INIT,ELSE,SPLITPRE
SplitPreAction:FOR_REFRESH_END,IF,SPLITPRE
SplitPreAction:FOR_REFRESH_IN,IF,SPLITPRE
SplitPreAction:FOR_CONDITION_IN,IF,SPLITPRE
SplitPreAction:FOR_INIT_IN,IF,SPLITPRE
SplitPreAction:WHILE_CASE_OUT,IF,SPLITPRE
SplitPreAction:WHILE_CASE_IN,IF,SPLITPRE
SplitPreAction:ELIF_BLOCK_OUT,IF,SPLITPRE
SplitPreAction:ELIF_CASE_OUT,IF,SPLITPRE
SplitPreAction:ELIF_CASE_IN,IF,SPLITPRE
SplitPreAction:IF_BLOCK_OUT,IF,SPLITPRE
SplitPreAction:IF_CASE_OUT,IF,SPLITPRE
SplitPreAction:IF_CASE_IN,IF,SPLITPRE
SplitPreAction:DO_WHILE_CASE_OUT,IF,SPLITPRE
SplitPreAction:DO_WHILE_CASE_IN,IF,SPLITPRE
SplitPreAction:DO_WHILE_BLOCK_OUT,IF,SPLITPRE
SplitPreAction:LEFTPAR,IF,SPLITPRE
SplitPreAction:LEFTBRA,IF,SPLITPRE
SplitPreAction:SENTENCE_IN,IF,SPLITPRE
SplitPreAction:WHILE_OF_DO,IF,SPLITPRE
SplitPreAction:FOR_SYMBOL,IF,SPLITPRE
SplitPreAction:DO_SYMBOL,IF,SPLITPRE
SplitPreAction:WHILE_SYMBOL,IF,SPLITPRE
SplitPreAction:ELSE_SYMBOL,IF,SPLITPRE
SplitPreAction:ELIF_SYMBOL,IF,SPLITPRE
SplitPreAction:IF_SYMBOL,IF,SPLITPRE
SplitPreAction:INIT,IF,SPLITPRE
SplitPreAction:INIT,LEFT_BRACE,SPLITPRE
set defaultAction StackPushAction
NOT_DEFINE
syntax add StackPushAction -n 175
StackPushAction:FOR_REFRESH_IN,LEFT_PAR,LEFTPAR
StackPushAction:FOR_REFRESH_END,LEFT_BRACE,FOR_BODY_IN
StackPushAction:FOR_REFRESH_IN,RIGHT_PAR,FOR_REFRESH_END
StackPushAction:FOR_CONDITION_IN,SEMICOLON,FOR_REFRESH_IN
StackPushAction:FOR_INIT_IN,SEMICOLON,FOR_REFRESH_IN
StackPushAction:FOR_SYMBOL,LEFT_PAR,FOR_INIT_IN
StackPushAction:FOR_BODY_IN,FOR,FOR_SYMBOL
StackPushAction:WHILE_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:DO_WHILE_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:ELSE_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:ELIF_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:IF_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:DO_WHILE_CASE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:DO_WHILE_CASE_IN,LEFT_PAR,LEFTPAR
StackPushAction:DO_WHILE_CASE_IN,RIGHT_PAR,DO_WHILE_CASE_OUT
StackPushAction:WHILE_OF_DO,LEFT_PAR,DO_WHILE_CASE_IN
StackPushAction:DO_WHILE_BLOCK_OUT,WHILE,WHILE_OF_DO
StackPushAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,DO_WHILE_BLOCK_OUT
StackPushAction:DO_SYMBOL,LEFT_BRACE,DO_WHILE_BLOCK_IN
StackPushAction:FOR_BODY_IN,DO,DO_SYMBOL
StackPushAction:DO_WHILE_CASE_IN,DO,DO_SYMBOL
StackPushAction:WHILE_BLOCK_IN,DO,DO_SYMBOL
StackPushAction:ELSE_BLOCK_IN,DO,DO_SYMBOL
StackPushAction:ELIF_BLOCK_IN,DO,DO_SYMBOL
StackPushAction:IF_BLOCK_IN,DO,DO_SYMBOL
StackPushAction:BLOCK_IN,DO,DO_SYMBOL
StackPushAction:WHILE_CASE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:WHILE_CASE_IN,LEFT_PAR,LEFTPAR
StackPushAction:WHILE_CASE_OUT,LEFT_BRACE,WHILE_BLOCK_IN
StackPushAction:WHILE_CASE_IN,RIGHT_PAR,WHILE_CASE_OUT
StackPushAction:WHILE_SYMBOL,LEFT_PAR,WHILE_CASE_IN
StackPushAction:FOR_BODY_IN,WHILE,WHILE_SYMBOL
StackPushAction:WHILE_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:DO_WHILE_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:ELSE_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:ELIF_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:IF_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:ELSE_SYMBOL,LEFT_BRACE,ELSE_BLOCK_IN
StackPushAction:ELIF_BLOCK_OUT,ELSE,ELSE_SYMBOL
StackPushAction:IF_BLOCK_OUT,ELSE,ELSE_SYMBOL
StackPushAction:ELIF_CASE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:ELIF_CASE_IN,LEFT_PAR,LEFTPAR
StackPushAction:ELIF_BLOCK_IN,RIGHT_BRACE,ELIF_BLOCK_OUT
StackPushAction:ELIF_CASE_OUT,LEFT_BRACE,ELIF_BLOCK_IN
StackPushAction:ELIF_CASE_IN,RIGHT_PAR,ELIF_CASE_OUT
StackPushAction:ELIF_SYMBOL,LEFT_PAR,ELIF_CASE_IN
StackPushAction:IF_BLOCK_OUT,ELIF,ELIF_SYMBOL
StackPushAction:IF_CASE_IN,LEFT_PAR,LEFTPAR
StackPushAction:IF_CASE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:IF_BLOCK_IN,RIGHT_BRACE,IF_BLOCK_OUT
StackPushAction:IF_CASE_OUT,LEFT_BRACE,IF_BLOCK_IN
StackPushAction:IF_CASE_IN,RIGHT_PAR,IF_CASE_OUT
StackPushAction:IF_SYMBOL,LEFT_PAR,IF_CASE_IN
StackPushAction:WHILE_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:DO_WHILE_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:FOR_BODY_IN,IF,IF_SYMBOL
StackPushAction:ELSE_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:ELIF_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:IF_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:BLOCK_IN,IF,IF_SYMBOL
StackPushAction:WHILE_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:DO_WHILE_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:FOR_BODY_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:ELSE_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:ELIF_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:IF_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:INIT,LEFT_BRACE,BLOCK_IN
StackPushAction:LEFTBRA,LEFT_BRACE,LEFTBRA
StackPushAction:LEFTPAR,LEFT_BRACE,LEFTBRA
StackPushAction:LEFTBRA,LEFT_PAR,LEFTPAR
StackPushAction:LEFTPAR,LEFT_PAR,LEFTPAR
StackPushAction:SENTENCE_IN,LEFT_PAR,LEFTPAR
StackPushAction:SENTENCE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:ELIF_BLOCK_OUT,SELF_KEYWORD,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,CONST,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,CONST_KEYWORD,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,OP,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,BREAK,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,CONTINUE,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,RETURN,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,VAR,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,FUNC,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,TYPE,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,SELF_KEYWORD,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,CONST,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,CONST_KEYWORD,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,OP,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,BREAK,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,CONTINUE,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,RETURN,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,VAR,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,FUNC,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,TYPE,SENTENCE_IN
StackPushAction:FOR_BODY_IN,SELF_KEYWORD,SENTENCE_IN
StackPushAction:FOR_BODY_IN,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:FOR_BODY_IN,CONST,SENTENCE_IN
StackPushAction:FOR_BODY_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:FOR_BODY_IN,OP,SENTENCE_IN
StackPushAction:FOR_BODY_IN,BREAK,SENTENCE_IN
StackPushAction:FOR_BODY_IN,RETURN,SENTENCE_IN
StackPushAction:FOR_BODY_IN,CONTINUE,SENTENCE_IN
StackPushAction:FOR_BODY_IN,FUNC,SENTENCE_IN
StackPushAction:FOR_BODY_IN,VAR,SENTENCE_IN
StackPushAction:FOR_BODY_IN,TYPE,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,SELF_KEYWORD,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,CONST,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,SELF_KEYWORD,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,CONST,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,SELF_KEYWORD,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,CONST,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,SELF_KEYWORD,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,CONST,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,SELF_KEYWORD,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,CONST,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:BLOCK_IN,SELF_KEYWORD,SENTENCE_IN
StackPushAction:BLOCK_IN,TYPEDEF_KEYWORD,SENTENCE_IN
StackPushAction:BLOCK_IN,CONST,SENTENCE_IN
StackPushAction:BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:BLOCK_IN,OP,SENTENCE_IN
StackPushAction:BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:BLOCK_IN,TYPE,SENTENCE_IN
action add StackPopAction
Pop Nop
set defaultAction StackPopAction
Pop
syntax add StackPopAction -n 411
StackPopAction:FOR_REFRESH_IN,RIGHT_PAR,Pop
StackPopAction:FOR_REFRESH_IN,SELF_KEYWORD,Nop
StackPopAction:FOR_REFRESH_IN,UNKNOWN,Nop
StackPopAction:FOR_REFRESH_IN,FUNC,Nop
StackPopAction:FOR_REFRESH_IN,COMMA,Nop
StackPopAction:FOR_REFRESH_IN,SEMICOLON,Nop
StackPopAction:FOR_REFRESH_IN,RIGHT_BRACE,Nop
StackPopAction:FOR_REFRESH_IN,LEFT_BRACE,Nop
StackPopAction:FOR_REFRESH_IN,RIGHT_BRACKET,Nop
StackPopAction:FOR_REFRESH_IN,LEFT_BRACKET,Nop
StackPopAction:FOR_REFRESH_IN,LEFT_PAR,Nop
StackPopAction:FOR_REFRESH_IN,OP,Nop
StackPopAction:FOR_REFRESH_IN,CONTINUE,Nop
StackPopAction:FOR_REFRESH_IN,BREAK,Nop
StackPopAction:FOR_REFRESH_IN,RETURN,Nop
StackPopAction:FOR_REFRESH_IN,FOR,Nop
StackPopAction:FOR_REFRESH_IN,WHILE,Nop
StackPopAction:FOR_REFRESH_IN,DO,Nop
StackPopAction:FOR_REFRESH_IN,ELSE,Nop
StackPopAction:FOR_REFRESH_IN,ELIF,Nop
StackPopAction:FOR_REFRESH_IN,IF,Nop
StackPopAction:FOR_REFRESH_IN,CONST_KEYWORD,Nop
StackPopAction:FOR_REFRESH_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:FOR_REFRESH_IN,VAR,Nop
StackPopAction:FOR_REFRESH_IN,CONST,Nop
StackPopAction:FOR_REFRESH_IN,TYPE,Nop
StackPopAction:FOR_CONDITION_IN,SEMICOLON,Pop
StackPopAction:FOR_CONDITION_IN,SELF_KEYWORD,Nop
StackPopAction:FOR_CONDITION_IN,UNKNOWN,Nop
StackPopAction:FOR_CONDITION_IN,FUNC,Nop
StackPopAction:FOR_CONDITION_IN,COMMA,Nop
StackPopAction:FOR_CONDITION_IN,RIGHT_BRACE,Nop
StackPopAction:FOR_CONDITION_IN,LEFT_BRACE,Nop
StackPopAction:FOR_CONDITION_IN,RIGHT_BRACKET,Nop
StackPopAction:FOR_CONDITION_IN,LEFT_BRACKET,Nop
StackPopAction:FOR_CONDITION_IN,RIGHT_PAR,Nop
StackPopAction:FOR_CONDITION_IN,LEFT_PAR,Nop
StackPopAction:FOR_CONDITION_IN,OP,Nop
StackPopAction:FOR_CONDITION_IN,CONTINUE,Nop
StackPopAction:FOR_CONDITION_IN,BREAK,Nop
StackPopAction:FOR_CONDITION_IN,RETURN,Nop
StackPopAction:FOR_CONDITION_IN,FOR,Nop
StackPopAction:FOR_CONDITION_IN,WHILE,Nop
StackPopAction:FOR_CONDITION_IN,DO,Nop
StackPopAction:FOR_CONDITION_IN,ELSE,Nop
StackPopAction:FOR_CONDITION_IN,ELIF,Nop
StackPopAction:FOR_CONDITION_IN,IF,Nop
StackPopAction:FOR_CONDITION_IN,CONST_KEYWORD,Nop
StackPopAction:FOR_CONDITION_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:FOR_CONDITION_IN,VAR,Nop
StackPopAction:FOR_CONDITION_IN,CONST,Nop
StackPopAction:FOR_CONDITION_IN,TYPE,Nop
StackPopAction:FOR_INIT_IN,SEMICOLON,Pop
StackPopAction:FOR_INIT_IN,SELF_KEYWORD,Nop
StackPopAction:FOR_INIT_IN,UNKNOWN,Nop
StackPopAction:FOR_INIT_IN,FUNC,Nop
StackPopAction:FOR_INIT_IN,COMMA,Nop
StackPopAction:FOR_INIT_IN,RIGHT_BRACE,Nop
StackPopAction:FOR_INIT_IN,LEFT_BRACE,Nop
StackPopAction:FOR_INIT_IN,RIGHT_BRACKET,Nop
StackPopAction:FOR_INIT_IN,LEFT_BRACKET,Nop
StackPopAction:FOR_INIT_IN,RIGHT_PAR,Nop
StackPopAction:FOR_INIT_IN,LEFT_PAR,Nop
StackPopAction:FOR_INIT_IN,OP,Nop
StackPopAction:FOR_INIT_IN,CONTINUE,Nop
StackPopAction:FOR_INIT_IN,BREAK,Nop
StackPopAction:FOR_INIT_IN,RETURN,Nop
StackPopAction:FOR_INIT_IN,FOR,Nop
StackPopAction:FOR_INIT_IN,WHILE,Nop
StackPopAction:FOR_INIT_IN,DO,Nop
StackPopAction:FOR_INIT_IN,ELSE,Nop
StackPopAction:FOR_INIT_IN,ELIF,Nop
StackPopAction:FOR_INIT_IN,IF,Nop
StackPopAction:FOR_INIT_IN,CONST_KEYWORD,Nop
StackPopAction:FOR_INIT_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:FOR_INIT_IN,VAR,Nop
StackPopAction:FOR_INIT_IN,CONST,Nop
StackPopAction:FOR_INIT_IN,TYPE,Nop
StackPopAction:FOR_BODY_IN,RIGHT_BRACE,Pop
StackPopAction:FOR_REFRESH_END,LEFT_BRACE,Pop
StackPopAction:FOR_SYMBOL,LEFT_PAR,Pop
StackPopAction:FOR_BODY_IN,FOR,Nop
StackPopAction:WHILE_BLOCK_IN,FOR,Nop
StackPopAction:DO_WHILE_BLOCK_IN,FOR,Nop
StackPopAction:ELSE_BLOCK_IN,FOR,Nop
StackPopAction:ELIF_BLOCK_IN,FOR,Nop
StackPopAction:IF_BLOCK_IN,FOR,Nop
StackPopAction:BLOCK_IN,FOR,Nop
StackPopAction:DO_WHILE_CASE_IN,RIGHT_PAR,Pop
StackPopAction:DO_WHILE_CASE_IN,SELF_KEYWORD,Nop
StackPopAction:DO_WHILE_CASE_IN,UNKNOWN,Nop
StackPopAction:DO_WHILE_CASE_IN,FUNC,Nop
StackPopAction:DO_WHILE_CASE_IN,COMMA,Nop
StackPopAction:DO_WHILE_CASE_IN,SEMICOLON,Nop
StackPopAction:DO_WHILE_CASE_IN,RIGHT_BRACE,Nop
StackPopAction:DO_WHILE_CASE_IN,LEFT_BRACE,Nop
StackPopAction:DO_WHILE_CASE_IN,RIGHT_BRACKET,Nop
StackPopAction:DO_WHILE_CASE_IN,LEFT_BRACKET,Nop
StackPopAction:DO_WHILE_CASE_IN,LEFT_PAR,Nop
StackPopAction:DO_WHILE_CASE_IN,OP,Nop
StackPopAction:DO_WHILE_CASE_IN,CONTINUE,Nop
StackPopAction:DO_WHILE_CASE_IN,BREAK,Nop
StackPopAction:DO_WHILE_CASE_IN,RETURN,Nop
StackPopAction:DO_WHILE_CASE_IN,FOR,Nop
StackPopAction:DO_WHILE_CASE_IN,WHILE,Nop
StackPopAction:DO_WHILE_CASE_IN,DO,Nop
StackPopAction:DO_WHILE_CASE_IN,ELSE,Nop
StackPopAction:DO_WHILE_CASE_IN,ELIF,Nop
StackPopAction:DO_WHILE_CASE_IN,IF,Nop
StackPopAction:DO_WHILE_CASE_IN,CONST_KEYWORD,Nop
StackPopAction:DO_WHILE_CASE_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:DO_WHILE_CASE_IN,VAR,Nop
StackPopAction:DO_WHILE_CASE_IN,CONST,Nop
StackPopAction:DO_WHILE_CASE_IN,TYPE,Nop
StackPopAction:DO_WHILE_CASE_OUT,SEMICOLON,Pop
StackPopAction:FOR_BODY_IN,DO,Nop
StackPopAction:DO_WHILE_BLOCK_IN,DO,Nop
StackPopAction:WHILE_BLOCK_IN,DO,Nop
StackPopAction:ELSE_BLOCK_IN,DO,Nop
StackPopAction:ELIF_BLOCK_IN,DO,Nop
StackPopAction:IF_BLOCK_IN,DO,Nop
StackPopAction:BLOCK_IN,DO,Nop
StackPopAction:WHILE_CASE_IN,RIGHT_PAR,Pop
StackPopAction:WHILE_CASE_IN,SELF_KEYWORD,Nop
StackPopAction:WHILE_CASE_IN,UNKNOWN,Nop
StackPopAction:WHILE_CASE_IN,FUNC,Nop
StackPopAction:WHILE_CASE_IN,COMMA,Nop
StackPopAction:WHILE_CASE_IN,SEMICOLON,Nop
StackPopAction:WHILE_CASE_IN,RIGHT_BRACE,Nop
StackPopAction:WHILE_CASE_IN,LEFT_BRACE,Nop
StackPopAction:WHILE_CASE_IN,RIGHT_BRACKET,Nop
StackPopAction:WHILE_CASE_IN,LEFT_BRACKET,Nop
StackPopAction:WHILE_CASE_IN,LEFT_PAR,Nop
StackPopAction:WHILE_CASE_IN,OP,Nop
StackPopAction:WHILE_CASE_IN,CONTINUE,Nop
StackPopAction:WHILE_CASE_IN,BREAK,Nop
StackPopAction:WHILE_CASE_IN,RETURN,Nop
StackPopAction:WHILE_CASE_IN,FOR,Nop
StackPopAction:WHILE_CASE_IN,WHILE,Nop
StackPopAction:WHILE_CASE_IN,DO,Nop
StackPopAction:WHILE_CASE_IN,ELSE,Nop
StackPopAction:WHILE_CASE_IN,ELIF,Nop
StackPopAction:WHILE_CASE_IN,IF,Nop
StackPopAction:WHILE_CASE_IN,CONST_KEYWORD,Nop
StackPopAction:WHILE_CASE_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:WHILE_CASE_IN,VAR,Nop
StackPopAction:WHILE_CASE_IN,CONST,Nop
StackPopAction:WHILE_CASE_IN,TYPE,Nop
StackPopAction:WHILE_BLOCK_IN,RIGHT_BRACE,Pop
StackPopAction:FOR_BODY_IN,WHILE,Nop
StackPopAction:WHILE_BLOCK_IN,WHILE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,WHILE,Nop
StackPopAction:ELSE_BLOCK_IN,WHILE,Nop
StackPopAction:ELIF_BLOCK_IN,WHILE,Nop
StackPopAction:IF_BLOCK_IN,WHILE,Nop
StackPopAction:BLOCK_IN,WHILE,Nop
StackPopAction:ELSE_BLOCK_IN,RIGHT_BRACE,Pop
StackPopAction:ELIF_CASE_IN,RIGHT_PAR,Pop
StackPopAction:ELIF_CASE_IN,SELF_KEYWORD,Nop
StackPopAction:ELIF_CASE_IN,UNKNOWN,Nop
StackPopAction:ELIF_CASE_IN,FUNC,Nop
StackPopAction:ELIF_CASE_IN,COMMA,Nop
StackPopAction:ELIF_CASE_IN,SEMICOLON,Nop
StackPopAction:ELIF_CASE_IN,RIGHT_BRACE,Nop
StackPopAction:ELIF_CASE_IN,LEFT_BRACE,Nop
StackPopAction:ELIF_CASE_IN,RIGHT_BRACKET,Nop
StackPopAction:ELIF_CASE_IN,LEFT_BRACKET,Nop
StackPopAction:ELIF_CASE_IN,LEFT_PAR,Nop
StackPopAction:ELIF_CASE_IN,OP,Nop
StackPopAction:ELIF_CASE_IN,CONTINUE,Nop
StackPopAction:ELIF_CASE_IN,BREAK,Nop
StackPopAction:ELIF_CASE_IN,RETURN,Nop
StackPopAction:ELIF_CASE_IN,FOR,Nop
StackPopAction:ELIF_CASE_IN,WHILE,Nop
StackPopAction:ELIF_CASE_IN,DO,Nop
StackPopAction:ELIF_CASE_IN,ELSE,Nop
StackPopAction:ELIF_CASE_IN,ELIF,Nop
StackPopAction:ELIF_CASE_IN,IF,Nop
StackPopAction:ELIF_CASE_IN,CONST_KEYWORD,Nop
StackPopAction:ELIF_CASE_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:ELIF_CASE_IN,VAR,Nop
StackPopAction:ELIF_CASE_IN,CONST,Nop
StackPopAction:ELIF_CASE_IN,TYPE,Nop
StackPopAction:IF_CASE_IN,RIGHT_PAR,Pop
StackPopAction:IF_CASE_IN,SELF_KEYWORD,Nop
StackPopAction:IF_CASE_IN,UNKNOWN,Nop
StackPopAction:IF_CASE_IN,FUNC,Nop
StackPopAction:IF_CASE_IN,COMMA,Nop
StackPopAction:IF_CASE_IN,SEMICOLON,Nop
StackPopAction:IF_CASE_IN,RIGHT_BRACE,Nop
StackPopAction:IF_CASE_IN,LEFT_BRACE,Nop
StackPopAction:IF_CASE_IN,RIGHT_BRACKET,Nop
StackPopAction:IF_CASE_IN,LEFT_BRACKET,Nop
StackPopAction:IF_CASE_IN,LEFT_PAR,Nop
StackPopAction:IF_CASE_IN,OP,Nop
StackPopAction:IF_CASE_IN,CONTINUE,Nop
StackPopAction:IF_CASE_IN,BREAK,Nop
StackPopAction:IF_CASE_IN,RETURN,Nop
StackPopAction:IF_CASE_IN,FOR,Nop
StackPopAction:IF_CASE_IN,WHILE,Nop
StackPopAction:IF_CASE_IN,DO,Nop
StackPopAction:IF_CASE_IN,ELSE,Nop
StackPopAction:IF_CASE_IN,ELIF,Nop
StackPopAction:IF_CASE_IN,IF,Nop
StackPopAction:IF_CASE_IN,CONST_KEYWORD,Nop
StackPopAction:IF_CASE_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:IF_CASE_IN,VAR,Nop
StackPopAction:IF_CASE_IN,CONST,Nop
StackPopAction:IF_CASE_IN,TYPE,Nop
StackPopAction:WHILE_BLOCK_IN,IF,Nop
StackPopAction:DO_WHILE_BLOCK_IN,IF,Nop
StackPopAction:FOR_BODY_IN,IF,Nop
StackPopAction:ELSE_BLOCK_IN,IF,Nop
StackPopAction:ELIF_BLOCK_IN,IF,Nop
StackPopAction:IF_BLOCK_IN,IF,Nop
StackPopAction:BLOCK_IN,IF,Nop
StackPopAction:WHILE_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:FOR_BODY_IN,LEFT_BRACE,Nop
StackPopAction:ELSE_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:ELIF_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:IF_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:INIT,SELF_KEYWORD,Nop
StackPopAction:INIT,UNKNOWN,Nop
StackPopAction:INIT,FUNC,Nop
StackPopAction:INIT,COMMA,Nop
StackPopAction:INIT,SEMICOLON,Nop
StackPopAction:INIT,RIGHT_BRACE,Nop
StackPopAction:INIT,LEFT_BRACE,Nop
StackPopAction:INIT,RIGHT_BRACKET,Nop
StackPopAction:INIT,LEFT_BRACKET,Nop
StackPopAction:INIT,RIGHT_PAR,Nop
StackPopAction:INIT,LEFT_PAR,Nop
StackPopAction:INIT,OP,Nop
StackPopAction:INIT,CONTINUE,Nop
StackPopAction:INIT,BREAK,Nop
StackPopAction:INIT,RETURN,Nop
StackPopAction:INIT,FOR,Nop
StackPopAction:INIT,WHILE,Nop
StackPopAction:INIT,DO,Nop
StackPopAction:INIT,ELSE,Nop
StackPopAction:INIT,ELIF,Nop
StackPopAction:INIT,IF,Nop
StackPopAction:INIT,CONST_KEYWORD,Nop
StackPopAction:INIT,TYPEDEF_KEYWORD,Nop
StackPopAction:INIT,VAR,Nop
StackPopAction:INIT,CONST,Nop
StackPopAction:INIT,TYPE,Nop
StackPopAction:LEFTPAR,RIGHT_PAR,Pop
StackPopAction:LEFTBRA,RIGHT_BRACE,Pop
StackPopAction:LEFTPAR,SELF_KEYWORD,Nop
StackPopAction:LEFTPAR,UNKNOWN,Nop
StackPopAction:LEFTPAR,FUNC,Nop
StackPopAction:LEFTPAR,COMMA,Nop
StackPopAction:LEFTPAR,SEMICOLON,Nop
StackPopAction:LEFTPAR,RIGHT_BRACE,Nop
StackPopAction:LEFTPAR,LEFT_BRACE,Nop
StackPopAction:LEFTPAR,RIGHT_BRACKET,Nop
StackPopAction:LEFTPAR,LEFT_BRACKET,Nop
StackPopAction:LEFTPAR,LEFT_PAR,Nop
StackPopAction:LEFTPAR,OP,Nop
StackPopAction:LEFTPAR,CONTINUE,Nop
StackPopAction:LEFTPAR,BREAK,Nop
StackPopAction:LEFTPAR,RETURN,Nop
StackPopAction:LEFTPAR,FOR,Nop
StackPopAction:LEFTPAR,WHILE,Nop
StackPopAction:LEFTPAR,DO,Nop
StackPopAction:LEFTPAR,ELSE,Nop
StackPopAction:LEFTPAR,ELIF,Nop
StackPopAction:LEFTPAR,IF,Nop
StackPopAction:LEFTPAR,CONST_KEYWORD,Nop
StackPopAction:LEFTPAR,TYPEDEF_KEYWORD,Nop
StackPopAction:LEFTPAR,VAR,Nop
StackPopAction:LEFTPAR,CONST,Nop
StackPopAction:LEFTPAR,TYPE,Nop
StackPopAction:LEFTBRA,SELF_KEYWORD,Nop
StackPopAction:LEFTBRA,UNKNOWN,Nop
StackPopAction:LEFTBRA,FUNC,Nop
StackPopAction:LEFTBRA,COMMA,Nop
StackPopAction:LEFTBRA,SEMICOLON,Nop
StackPopAction:LEFTBRA,LEFT_BRACE,Nop
StackPopAction:LEFTBRA,RIGHT_BRACKET,Nop
StackPopAction:LEFTBRA,LEFT_BRACKET,Nop
StackPopAction:LEFTBRA,RIGHT_PAR,Nop
StackPopAction:LEFTBRA,LEFT_PAR,Nop
StackPopAction:LEFTBRA,OP,Nop
StackPopAction:LEFTBRA,CONTINUE,Nop
StackPopAction:LEFTBRA,BREAK,Nop
StackPopAction:LEFTBRA,RETURN,Nop
StackPopAction:LEFTBRA,FOR,Nop
StackPopAction:LEFTBRA,WHILE,Nop
StackPopAction:LEFTBRA,DO,Nop
StackPopAction:LEFTBRA,ELSE,Nop
StackPopAction:LEFTBRA,ELIF,Nop
StackPopAction:LEFTBRA,IF,Nop
StackPopAction:LEFTBRA,CONST_KEYWORD,Nop
StackPopAction:LEFTBRA,TYPEDEF_KEYWORD,Nop
StackPopAction:LEFTBRA,VAR,Nop
StackPopAction:LEFTBRA,CONST,Nop
StackPopAction:LEFTBRA,TYPE,Nop
StackPopAction:SENTENCE_IN,SEMICOLON,Pop
StackPopAction:SENTENCE_IN,SELF_KEYWORD,Nop
StackPopAction:SENTENCE_IN,UNKNOWN,Nop
StackPopAction:SENTENCE_IN,FUNC,Nop
StackPopAction:SENTENCE_IN,COMMA,Nop
StackPopAction:SENTENCE_IN,RIGHT_BRACE,Nop
StackPopAction:SENTENCE_IN,LEFT_BRACE,Nop
StackPopAction:SENTENCE_IN,RIGHT_BRACKET,Nop
StackPopAction:SENTENCE_IN,LEFT_BRACKET,Nop
StackPopAction:SENTENCE_IN,RIGHT_PAR,Nop
StackPopAction:SENTENCE_IN,LEFT_PAR,Nop
StackPopAction:SENTENCE_IN,OP,Nop
StackPopAction:SENTENCE_IN,CONTINUE,Nop
StackPopAction:SENTENCE_IN,BREAK,Nop
StackPopAction:SENTENCE_IN,RETURN,Nop
StackPopAction:SENTENCE_IN,FOR,Nop
StackPopAction:SENTENCE_IN,WHILE,Nop
StackPopAction:SENTENCE_IN,DO,Nop
StackPopAction:SENTENCE_IN,ELSE,Nop
StackPopAction:SENTENCE_IN,ELIF,Nop
StackPopAction:SENTENCE_IN,IF,Nop
StackPopAction:SENTENCE_IN,CONST_KEYWORD,Nop
StackPopAction:SENTENCE_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:SENTENCE_IN,VAR,Nop
StackPopAction:SENTENCE_IN,CONST,Nop
StackPopAction:SENTENCE_IN,TYPE,Nop
StackPopAction:FOR_BODY_IN,SELF_KEYWORD,Nop
StackPopAction:FOR_BODY_IN,CONST,Nop
StackPopAction:FOR_BODY_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:FOR_BODY_IN,CONST_KEYWORD,Nop
StackPopAction:FOR_BODY_IN,OP,Nop
StackPopAction:FOR_BODY_IN,BREAK,Nop
StackPopAction:FOR_BODY_IN,RETURN,Nop
StackPopAction:FOR_BODY_IN,CONTINUE,Nop
StackPopAction:FOR_BODY_IN,FUNC,Nop
StackPopAction:FOR_BODY_IN,VAR,Nop
StackPopAction:FOR_BODY_IN,TYPE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,SELF_KEYWORD,Nop
StackPopAction:DO_WHILE_BLOCK_IN,CONST,Nop
StackPopAction:DO_WHILE_BLOCK_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:DO_WHILE_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:DO_WHILE_BLOCK_IN,OP,Nop
StackPopAction:DO_WHILE_BLOCK_IN,BREAK,Nop
StackPopAction:DO_WHILE_BLOCK_IN,RETURN,Nop
StackPopAction:DO_WHILE_BLOCK_IN,CONTINUE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,FUNC,Nop
StackPopAction:DO_WHILE_BLOCK_IN,VAR,Nop
StackPopAction:DO_WHILE_BLOCK_IN,TYPE,Nop
StackPopAction:WHILE_BLOCK_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:WHILE_BLOCK_IN,SELF_KEYWORD,Nop
StackPopAction:WHILE_BLOCK_IN,CONST,Nop
StackPopAction:WHILE_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:WHILE_BLOCK_IN,OP,Nop
StackPopAction:WHILE_BLOCK_IN,BREAK,Nop
StackPopAction:WHILE_BLOCK_IN,RETURN,Nop
StackPopAction:WHILE_BLOCK_IN,CONTINUE,Nop
StackPopAction:WHILE_BLOCK_IN,FUNC,Nop
StackPopAction:WHILE_BLOCK_IN,VAR,Nop
StackPopAction:WHILE_BLOCK_IN,TYPE,Nop
StackPopAction:ELSE_BLOCK_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:ELSE_BLOCK_IN,SELF_KEYWORD,Nop
StackPopAction:ELSE_BLOCK_IN,CONST,Nop
StackPopAction:ELSE_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:ELSE_BLOCK_IN,OP,Nop
StackPopAction:ELSE_BLOCK_IN,BREAK,Nop
StackPopAction:ELSE_BLOCK_IN,RETURN,Nop
StackPopAction:ELSE_BLOCK_IN,CONTINUE,Nop
StackPopAction:ELSE_BLOCK_IN,FUNC,Nop
StackPopAction:ELSE_BLOCK_IN,VAR,Nop
StackPopAction:ELSE_BLOCK_IN,TYPE,Nop
StackPopAction:ELIF_BLOCK_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:ELIF_BLOCK_IN,CONST,Nop
StackPopAction:ELIF_BLOCK_IN,SELF_KEYWORD,Nop
StackPopAction:ELIF_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:ELIF_BLOCK_IN,OP,Nop
StackPopAction:ELIF_BLOCK_IN,BREAK,Nop
StackPopAction:ELIF_BLOCK_IN,RETURN,Nop
StackPopAction:ELIF_BLOCK_IN,CONTINUE,Nop
StackPopAction:ELIF_BLOCK_IN,FUNC,Nop
StackPopAction:ELIF_BLOCK_IN,VAR,Nop
StackPopAction:ELIF_BLOCK_IN,TYPE,Nop
StackPopAction:IF_BLOCK_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:IF_BLOCK_IN,SELF_KEYWORD,Nop
StackPopAction:IF_BLOCK_IN,CONST,Nop
StackPopAction:IF_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:IF_BLOCK_IN,OP,Nop
StackPopAction:IF_BLOCK_IN,BREAK,Nop
StackPopAction:IF_BLOCK_IN,RETURN,Nop
StackPopAction:IF_BLOCK_IN,CONTINUE,Nop
StackPopAction:IF_BLOCK_IN,FUNC,Nop
StackPopAction:IF_BLOCK_IN,VAR,Nop
StackPopAction:IF_BLOCK_IN,TYPE,Nop
StackPopAction:BLOCK_IN,TYPEDEF_KEYWORD,Nop
StackPopAction:BLOCK_IN,SELF_KEYWORD,Nop
StackPopAction:BLOCK_IN,CONST,Nop
StackPopAction:BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:BLOCK_IN,OP,Nop
StackPopAction:BLOCK_IN,BREAK,Nop
StackPopAction:BLOCK_IN,CONTINUE,Nop
StackPopAction:BLOCK_IN,RETURN,Nop
StackPopAction:BLOCK_IN,FUNC,Nop
StackPopAction:BLOCK_IN,VAR,Nop
StackPopAction:BLOCK_IN,TYPE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,SEMICOLON,Nop
StackPopAction:WHILE_BLOCK_IN,SEMICOLON,Nop
StackPopAction:FOR_BODY_IN,SEMICOLON,Nop
StackPopAction:ELSE_BLOCK_IN,SEMICOLON,Nop
StackPopAction:ELIF_BLOCK_IN,SEMICOLON,Nop
StackPopAction:IF_BLOCK_IN,SEMICOLON,Nop
StackPopAction:BLOCK_IN,SEMICOLON,Nop
action add BlockAction
BlockIn BlockKeep BlockOut BlockInAfter
set defaultAction BlockAction
BlockKeep
syntax add BlockAction -n 14
BlockAction:BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:WHILE_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:FOR_BODY_IN,RIGHT_BRACE,BlockOut
BlockAction:ELSE_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:ELIF_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:IF_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:FOR_SYMBOL,LEFT_PAR,BlockInAfter
BlockAction:WHILE_CASE_OUT,LEFT_BRACE,BlockInAfter
BlockAction:DO_SYMBOL,LEFT_BRACE,BlockInAfter
BlockAction:ELSE_SYMBOL,LEFT_BRACE,BlockInAfter
BlockAction:ELIF_CASE_OUT,LEFT_BRACE,BlockInAfter
BlockAction:IF_CASE_OUT,LEFT_BRACE,BlockInAfter
BlockAction:INIT,LEFT_BRACE,BlockInAfter
action add PrintAction
PRINTENTER PRINTSPACE
set defaultAction PrintAction
PRINTSPACE
syntax add PrintAction -n 139
PrintAction:ELIF_BLOCK_OUT,CONST,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,SELF_KEYWORD,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,CONST_KEYWORD,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,OP,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,BREAK,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,CONTINUE,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,RETURN,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,VAR,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,FUNC,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,TYPE,PRINTENTER
PrintAction:IF_BLOCK_OUT,SELF_KEYWORD,PRINTENTER
PrintAction:IF_BLOCK_OUT,CONST,PRINTENTER
PrintAction:IF_BLOCK_OUT,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:IF_BLOCK_OUT,CONST_KEYWORD,PRINTENTER
PrintAction:IF_BLOCK_OUT,OP,PRINTENTER
PrintAction:IF_BLOCK_OUT,BREAK,PRINTENTER
PrintAction:IF_BLOCK_OUT,CONTINUE,PRINTENTER
PrintAction:IF_BLOCK_OUT,RETURN,PRINTENTER
PrintAction:IF_BLOCK_OUT,VAR,PRINTENTER
PrintAction:IF_BLOCK_OUT,FUNC,PRINTENTER
PrintAction:IF_BLOCK_OUT,TYPE,PRINTENTER
PrintAction:FOR_BODY_IN,SELF_KEYWORD,PRINTENTER
PrintAction:FOR_BODY_IN,CONST,PRINTENTER
PrintAction:FOR_BODY_IN,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:FOR_BODY_IN,CONST_KEYWORD,PRINTENTER
PrintAction:FOR_BODY_IN,OP,PRINTENTER
PrintAction:FOR_BODY_IN,BREAK,PRINTENTER
PrintAction:FOR_BODY_IN,RETURN,PRINTENTER
PrintAction:FOR_BODY_IN,CONTINUE,PRINTENTER
PrintAction:FOR_BODY_IN,FUNC,PRINTENTER
PrintAction:FOR_BODY_IN,VAR,PRINTENTER
PrintAction:FOR_BODY_IN,TYPE,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,SELF_KEYWORD,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,CONST,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,CONST_KEYWORD,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,OP,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,BREAK,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,RETURN,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,CONTINUE,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,FUNC,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,VAR,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,TYPE,PRINTENTER
PrintAction:WHILE_BLOCK_IN,SELF_KEYWORD,PRINTENTER
PrintAction:WHILE_BLOCK_IN,CONST,PRINTENTER
PrintAction:WHILE_BLOCK_IN,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:WHILE_BLOCK_IN,CONST_KEYWORD,PRINTENTER
PrintAction:WHILE_BLOCK_IN,OP,PRINTENTER
PrintAction:WHILE_BLOCK_IN,BREAK,PRINTENTER
PrintAction:WHILE_BLOCK_IN,RETURN,PRINTENTER
PrintAction:WHILE_BLOCK_IN,CONTINUE,PRINTENTER
PrintAction:WHILE_BLOCK_IN,FUNC,PRINTENTER
PrintAction:WHILE_BLOCK_IN,VAR,PRINTENTER
PrintAction:WHILE_BLOCK_IN,TYPE,PRINTENTER
PrintAction:ELSE_BLOCK_IN,SELF_KEYWORD,PRINTENTER
PrintAction:ELSE_BLOCK_IN,CONST,PRINTENTER
PrintAction:ELSE_BLOCK_IN,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:ELSE_BLOCK_IN,CONST_KEYWORD,PRINTENTER
PrintAction:ELSE_BLOCK_IN,OP,PRINTENTER
PrintAction:ELSE_BLOCK_IN,BREAK,PRINTENTER
PrintAction:ELSE_BLOCK_IN,RETURN,PRINTENTER
PrintAction:ELSE_BLOCK_IN,CONTINUE,PRINTENTER
PrintAction:ELSE_BLOCK_IN,FUNC,PRINTENTER
PrintAction:ELSE_BLOCK_IN,VAR,PRINTENTER
PrintAction:ELSE_BLOCK_IN,TYPE,PRINTENTER
PrintAction:ELIF_BLOCK_IN,CONST,PRINTENTER
PrintAction:ELIF_BLOCK_IN,SELF_KEYWORD,PRINTENTER
PrintAction:ELIF_BLOCK_IN,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:ELIF_BLOCK_IN,CONST_KEYWORD,PRINTENTER
PrintAction:ELIF_BLOCK_IN,OP,PRINTENTER
PrintAction:ELIF_BLOCK_IN,BREAK,PRINTENTER
PrintAction:ELIF_BLOCK_IN,RETURN,PRINTENTER
PrintAction:ELIF_BLOCK_IN,CONTINUE,PRINTENTER
PrintAction:ELIF_BLOCK_IN,FUNC,PRINTENTER
PrintAction:ELIF_BLOCK_IN,VAR,PRINTENTER
PrintAction:ELIF_BLOCK_IN,TYPE,PRINTENTER
PrintAction:IF_BLOCK_IN,SELF_KEYWORD,PRINTENTER
PrintAction:IF_BLOCK_IN,CONST,PRINTENTER
PrintAction:IF_BLOCK_IN,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:IF_BLOCK_IN,CONST_KEYWORD,PRINTENTER
PrintAction:IF_BLOCK_IN,OP,PRINTENTER
PrintAction:IF_BLOCK_IN,BREAK,PRINTENTER
PrintAction:IF_BLOCK_IN,RETURN,PRINTENTER
PrintAction:IF_BLOCK_IN,CONTINUE,PRINTENTER
PrintAction:IF_BLOCK_IN,FUNC,PRINTENTER
PrintAction:IF_BLOCK_IN,VAR,PRINTENTER
PrintAction:IF_BLOCK_IN,TYPE,PRINTENTER
PrintAction:BLOCK_IN,SELF_KEYWORD,PRINTENTER
PrintAction:BLOCK_IN,CONST,PRINTENTER
PrintAction:BLOCK_IN,TYPEDEF_KEYWORD,PRINTENTER
PrintAction:BLOCK_IN,CONST_KEYWORD,PRINTENTER
PrintAction:BLOCK_IN,OP,PRINTENTER
PrintAction:BLOCK_IN,BREAK,PRINTENTER
PrintAction:BLOCK_IN,CONTINUE,PRINTENTER
PrintAction:BLOCK_IN,RETURN,PRINTENTER
PrintAction:BLOCK_IN,FUNC,PRINTENTER
PrintAction:BLOCK_IN,VAR,PRINTENTER
PrintAction:BLOCK_IN,TYPE,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,ELIF,PRINTENTER
PrintAction:IF_BLOCK_OUT,ELIF,PRINTENTER
PrintAction:ELIF_BLOCK_OUT,ELSE,PRINTENTER
PrintAction:IF_BLOCK_OUT,ELSE,PRINTENTER
PrintAction:WHILE_BLOCK_IN,WHILE,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,WHILE,PRINTENTER
PrintAction:FOR_BODY_IN,WHILE,PRINTENTER
PrintAction:ELSE_BLOCK_IN,WHILE,PRINTENTER
PrintAction:ELIF_BLOCK_IN,WHILE,PRINTENTER
PrintAction:IF_BLOCK_IN,WHILE,PRINTENTER
PrintAction:BLOCK_IN,WHILE,PRINTENTER
PrintAction:WHILE_BLOCK_IN,DO,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,DO,PRINTENTER
PrintAction:FOR_BODY_IN,DO,PRINTENTER
PrintAction:ELSE_BLOCK_IN,DO,PRINTENTER
PrintAction:ELIF_BLOCK_IN,DO,PRINTENTER
PrintAction:IF_BLOCK_IN,DO,PRINTENTER
PrintAction:BLOCK_IN,DO,PRINTENTER
PrintAction:WHILE_BLOCK_IN,IF,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,IF,PRINTENTER
PrintAction:FOR_BODY_IN,IF,PRINTENTER
PrintAction:ELSE_BLOCK_IN,IF,PRINTENTER
PrintAction:ELIF_BLOCK_IN,IF,PRINTENTER
PrintAction:IF_BLOCK_IN,IF,PRINTENTER
PrintAction:BLOCK_IN,IF,PRINTENTER
PrintAction:WHILE_BLOCK_IN,FOR,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,FOR,PRINTENTER
PrintAction:FOR_BODY_IN,FOR,PRINTENTER
PrintAction:ELSE_BLOCK_IN,FOR,PRINTENTER
PrintAction:ELIF_BLOCK_IN,FOR,PRINTENTER
PrintAction:IF_BLOCK_IN,FOR,PRINTENTER
PrintAction:BLOCK_IN,FOR,PRINTENTER
PrintAction:BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:WHILE_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:FOR_BODY_IN,RIGHT_BRACE,PRINTENTER
PrintAction:ELSE_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:ELIF_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:IF_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:INIT,LEFT_BRACE,PRINTENTER
