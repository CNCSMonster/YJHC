symbol add -n 33
INIT IF_SYMBOL ELIF_SYMBOL ELSE_SYMBOL WHILE_SYMBOL DO_SYMBOL
FOR_SYMBOL WHILE_OF_DO BLOCK_IN SENTENCE_IN LEFTBRA LEFTPAR
DO_WHILE_BLOCK_IN DO_WHILE_BLOCK_OUT DO_WHILE_CASE_IN DO_WHILE_CASE_OUT IF_CASE_IN IF_CASE_OUT
IF_BLOCK_IN IF_BLOCK_OUT ELIF_CASE_IN ELIF_CASE_OUT ELIF_BLOCK_IN ELIF_BLOCK_OUT
ELSE_BLOCK_IN WHILE_CASE_IN WHILE_CASE_OUT WHILE_BLOCK_IN FOR_INIT_IN FOR_CONDITION_IN
FOR_REFRESH_IN FOR_REFRESH_END FOR_BODY_IN
token add -n 24
TYPE CONST VAR CONST_KEYWORD IF ELIF
ELSE DO WHILE FOR RETURN BREAK
CONTINUE OP LEFT_PAR RIGHT_PAR LEFT_BRACKET RIGHT_BRACKET
LEFT_BRACE RIGHT_BRACE SEMICOLON COMMA FUNC UNKNOWN
actionkind add -n 5
PrintAction BlockAction StackPopAction StackPushAction SplitAction
action add SplitAction
SPLIT
set defaultAction SplitAction
NOT_DEFINE
syntax add SplitAction -n 226
SplitAction:DO_SYMBOL,LEFT_BRACE,SPLIT
SplitAction:ELSE_SYMBOL,LEFT_BRACE,SPLIT
SplitAction:FOR_REFRESH_END,LEFT_BRACE,SPLIT
SplitAction:WHILE_CASE_OUT,LEFT_BRACE,SPLIT
SplitAction:ELIF_CASE_OUT,LEFT_BRACE,SPLIT
SplitAction:IF_CASE_OUT,LEFT_BRACE,SPLIT
SplitAction:BLOCK_IN,RIGHT_BRACE,SPLIT
SplitAction:ELSE_BLOCK_IN,RIGHT_BRACE,SPLIT
SplitAction:ELIF_BLOCK_IN,RIGHT_BRACE,SPLIT
SplitAction:IF_BLOCK_IN,RIGHT_BRACE,SPLIT
SplitAction:WHILE_BLOCK_IN,RIGHT_BRACE,SPLIT
SplitAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,SPLIT
SplitAction:FOR_BODY_IN,RIGHT_BRACE,SPLIT
SplitAction:FOR_REFRESH_IN,RIGHT_PAR,SPLIT
SplitAction:FOR_CONDITION_IN,SEMICOLON,SPLIT
SplitAction:FOR_INIT_IN,SEMICOLON,SPLIT
SplitAction:FOR_SYMBOL,LEFT_PAR,SPLIT
SplitAction:ELIF_SYMBOL,LEFT_PAR,SPLIT
SplitAction:IF_SYMBOL,LEFT_PAR,SPLIT
SplitAction:WHILE_OF_DO,LEFT_PAR,SPLIT
SplitAction:WHILE_SYMBOL,LEFT_PAR,SPLIT
SplitAction:DO_WHILE_CASE_OUT,SEMICOLON,SPLIT
SplitAction:DO_WHILE_CASE_IN,RIGHT_PAR,SPLIT
SplitAction:WHILE_CASE_IN,RIGHT_PAR,SPLIT
SplitAction:ELIF_CASE_IN,RIGHT_PAR,SPLIT
SplitAction:IF_CASE_IN,RIGHT_PAR,SPLIT
SplitAction:SENTENCE_IN,SEMICOLON,SPLIT
SplitAction:FOR_BODY_IN,DO,SPLIT
SplitAction:FOR_REFRESH_END,DO,SPLIT
SplitAction:FOR_REFRESH_IN,DO,SPLIT
SplitAction:FOR_CONDITION_IN,DO,SPLIT
SplitAction:FOR_INIT_IN,DO,SPLIT
SplitAction:WHILE_BLOCK_IN,DO,SPLIT
SplitAction:WHILE_CASE_OUT,DO,SPLIT
SplitAction:WHILE_CASE_IN,DO,SPLIT
SplitAction:ELSE_BLOCK_IN,DO,SPLIT
SplitAction:ELIF_BLOCK_OUT,DO,SPLIT
SplitAction:ELIF_BLOCK_IN,DO,SPLIT
SplitAction:ELIF_CASE_OUT,DO,SPLIT
SplitAction:ELIF_CASE_IN,DO,SPLIT
SplitAction:IF_BLOCK_OUT,DO,SPLIT
SplitAction:IF_BLOCK_IN,DO,SPLIT
SplitAction:IF_CASE_OUT,DO,SPLIT
SplitAction:IF_CASE_IN,DO,SPLIT
SplitAction:DO_WHILE_CASE_OUT,DO,SPLIT
SplitAction:DO_WHILE_CASE_IN,DO,SPLIT
SplitAction:DO_WHILE_BLOCK_OUT,DO,SPLIT
SplitAction:DO_WHILE_BLOCK_IN,DO,SPLIT
SplitAction:LEFTPAR,DO,SPLIT
SplitAction:LEFTBRA,DO,SPLIT
SplitAction:SENTENCE_IN,DO,SPLIT
SplitAction:BLOCK_IN,DO,SPLIT
SplitAction:WHILE_OF_DO,DO,SPLIT
SplitAction:FOR_SYMBOL,DO,SPLIT
SplitAction:DO_SYMBOL,DO,SPLIT
SplitAction:WHILE_SYMBOL,DO,SPLIT
SplitAction:ELSE_SYMBOL,DO,SPLIT
SplitAction:ELIF_SYMBOL,DO,SPLIT
SplitAction:IF_SYMBOL,DO,SPLIT
SplitAction:INIT,DO,SPLIT
SplitAction:FOR_BODY_IN,WHILE,SPLIT
SplitAction:FOR_REFRESH_END,WHILE,SPLIT
SplitAction:FOR_REFRESH_IN,WHILE,SPLIT
SplitAction:FOR_CONDITION_IN,WHILE,SPLIT
SplitAction:FOR_INIT_IN,WHILE,SPLIT
SplitAction:WHILE_BLOCK_IN,WHILE,SPLIT
SplitAction:WHILE_CASE_OUT,WHILE,SPLIT
SplitAction:WHILE_CASE_IN,WHILE,SPLIT
SplitAction:ELSE_BLOCK_IN,WHILE,SPLIT
SplitAction:ELIF_BLOCK_OUT,WHILE,SPLIT
SplitAction:ELIF_BLOCK_IN,WHILE,SPLIT
SplitAction:ELIF_CASE_OUT,WHILE,SPLIT
SplitAction:ELIF_CASE_IN,WHILE,SPLIT
SplitAction:IF_BLOCK_OUT,WHILE,SPLIT
SplitAction:IF_BLOCK_IN,WHILE,SPLIT
SplitAction:IF_CASE_OUT,WHILE,SPLIT
SplitAction:IF_CASE_IN,WHILE,SPLIT
SplitAction:DO_WHILE_CASE_OUT,WHILE,SPLIT
SplitAction:DO_WHILE_CASE_IN,WHILE,SPLIT
SplitAction:DO_WHILE_BLOCK_OUT,WHILE,SPLIT
SplitAction:DO_WHILE_BLOCK_IN,WHILE,SPLIT
SplitAction:LEFTPAR,WHILE,SPLIT
SplitAction:LEFTBRA,WHILE,SPLIT
SplitAction:SENTENCE_IN,WHILE,SPLIT
SplitAction:BLOCK_IN,WHILE,SPLIT
SplitAction:WHILE_OF_DO,WHILE,SPLIT
SplitAction:FOR_SYMBOL,WHILE,SPLIT
SplitAction:DO_SYMBOL,WHILE,SPLIT
SplitAction:WHILE_SYMBOL,WHILE,SPLIT
SplitAction:ELSE_SYMBOL,WHILE,SPLIT
SplitAction:ELIF_SYMBOL,WHILE,SPLIT
SplitAction:IF_SYMBOL,WHILE,SPLIT
SplitAction:INIT,WHILE,SPLIT
SplitAction:FOR_BODY_IN,FOR,SPLIT
SplitAction:FOR_REFRESH_END,FOR,SPLIT
SplitAction:FOR_REFRESH_IN,FOR,SPLIT
SplitAction:FOR_CONDITION_IN,FOR,SPLIT
SplitAction:FOR_INIT_IN,FOR,SPLIT
SplitAction:WHILE_BLOCK_IN,FOR,SPLIT
SplitAction:WHILE_CASE_OUT,FOR,SPLIT
SplitAction:WHILE_CASE_IN,FOR,SPLIT
SplitAction:ELSE_BLOCK_IN,FOR,SPLIT
SplitAction:ELIF_BLOCK_OUT,FOR,SPLIT
SplitAction:ELIF_BLOCK_IN,FOR,SPLIT
SplitAction:ELIF_CASE_OUT,FOR,SPLIT
SplitAction:ELIF_CASE_IN,FOR,SPLIT
SplitAction:IF_BLOCK_OUT,FOR,SPLIT
SplitAction:IF_BLOCK_IN,FOR,SPLIT
SplitAction:IF_CASE_OUT,FOR,SPLIT
SplitAction:IF_CASE_IN,FOR,SPLIT
SplitAction:DO_WHILE_CASE_OUT,FOR,SPLIT
SplitAction:DO_WHILE_CASE_IN,FOR,SPLIT
SplitAction:DO_WHILE_BLOCK_OUT,FOR,SPLIT
SplitAction:DO_WHILE_BLOCK_IN,FOR,SPLIT
SplitAction:LEFTPAR,FOR,SPLIT
SplitAction:LEFTBRA,FOR,SPLIT
SplitAction:SENTENCE_IN,FOR,SPLIT
SplitAction:BLOCK_IN,FOR,SPLIT
SplitAction:WHILE_OF_DO,FOR,SPLIT
SplitAction:FOR_SYMBOL,FOR,SPLIT
SplitAction:DO_SYMBOL,FOR,SPLIT
SplitAction:WHILE_SYMBOL,FOR,SPLIT
SplitAction:ELSE_SYMBOL,FOR,SPLIT
SplitAction:ELIF_SYMBOL,FOR,SPLIT
SplitAction:IF_SYMBOL,FOR,SPLIT
SplitAction:INIT,FOR,SPLIT
SplitAction:FOR_BODY_IN,ELIF,SPLIT
SplitAction:FOR_REFRESH_END,ELIF,SPLIT
SplitAction:FOR_REFRESH_IN,ELIF,SPLIT
SplitAction:FOR_CONDITION_IN,ELIF,SPLIT
SplitAction:FOR_INIT_IN,ELIF,SPLIT
SplitAction:WHILE_BLOCK_IN,ELIF,SPLIT
SplitAction:WHILE_CASE_OUT,ELIF,SPLIT
SplitAction:WHILE_CASE_IN,ELIF,SPLIT
SplitAction:ELSE_BLOCK_IN,ELIF,SPLIT
SplitAction:ELIF_BLOCK_OUT,ELIF,SPLIT
SplitAction:ELIF_BLOCK_IN,ELIF,SPLIT
SplitAction:ELIF_CASE_OUT,ELIF,SPLIT
SplitAction:ELIF_CASE_IN,ELIF,SPLIT
SplitAction:IF_BLOCK_OUT,ELIF,SPLIT
SplitAction:IF_BLOCK_IN,ELIF,SPLIT
SplitAction:IF_CASE_OUT,ELIF,SPLIT
SplitAction:IF_CASE_IN,ELIF,SPLIT
SplitAction:DO_WHILE_CASE_OUT,ELIF,SPLIT
SplitAction:DO_WHILE_CASE_IN,ELIF,SPLIT
SplitAction:DO_WHILE_BLOCK_OUT,ELIF,SPLIT
SplitAction:DO_WHILE_BLOCK_IN,ELIF,SPLIT
SplitAction:LEFTPAR,ELIF,SPLIT
SplitAction:LEFTBRA,ELIF,SPLIT
SplitAction:SENTENCE_IN,ELIF,SPLIT
SplitAction:BLOCK_IN,ELIF,SPLIT
SplitAction:WHILE_OF_DO,ELIF,SPLIT
SplitAction:FOR_SYMBOL,ELIF,SPLIT
SplitAction:DO_SYMBOL,ELIF,SPLIT
SplitAction:WHILE_SYMBOL,ELIF,SPLIT
SplitAction:ELSE_SYMBOL,ELIF,SPLIT
SplitAction:ELIF_SYMBOL,ELIF,SPLIT
SplitAction:IF_SYMBOL,ELIF,SPLIT
SplitAction:INIT,ELIF,SPLIT
SplitAction:FOR_BODY_IN,ELSE,SPLIT
SplitAction:FOR_REFRESH_END,ELSE,SPLIT
SplitAction:FOR_REFRESH_IN,ELSE,SPLIT
SplitAction:FOR_CONDITION_IN,ELSE,SPLIT
SplitAction:FOR_INIT_IN,ELSE,SPLIT
SplitAction:WHILE_BLOCK_IN,ELSE,SPLIT
SplitAction:WHILE_CASE_OUT,ELSE,SPLIT
SplitAction:WHILE_CASE_IN,ELSE,SPLIT
SplitAction:ELSE_BLOCK_IN,ELSE,SPLIT
SplitAction:ELIF_BLOCK_OUT,ELSE,SPLIT
SplitAction:ELIF_BLOCK_IN,ELSE,SPLIT
SplitAction:ELIF_CASE_OUT,ELSE,SPLIT
SplitAction:ELIF_CASE_IN,ELSE,SPLIT
SplitAction:IF_BLOCK_OUT,ELSE,SPLIT
SplitAction:IF_BLOCK_IN,ELSE,SPLIT
SplitAction:IF_CASE_OUT,ELSE,SPLIT
SplitAction:IF_CASE_IN,ELSE,SPLIT
SplitAction:DO_WHILE_CASE_OUT,ELSE,SPLIT
SplitAction:DO_WHILE_CASE_IN,ELSE,SPLIT
SplitAction:DO_WHILE_BLOCK_OUT,ELSE,SPLIT
SplitAction:DO_WHILE_BLOCK_IN,ELSE,SPLIT
SplitAction:LEFTPAR,ELSE,SPLIT
SplitAction:LEFTBRA,ELSE,SPLIT
SplitAction:SENTENCE_IN,ELSE,SPLIT
SplitAction:BLOCK_IN,ELSE,SPLIT
SplitAction:WHILE_OF_DO,ELSE,SPLIT
SplitAction:FOR_SYMBOL,ELSE,SPLIT
SplitAction:DO_SYMBOL,ELSE,SPLIT
SplitAction:WHILE_SYMBOL,ELSE,SPLIT
SplitAction:ELSE_SYMBOL,ELSE,SPLIT
SplitAction:ELIF_SYMBOL,ELSE,SPLIT
SplitAction:IF_SYMBOL,ELSE,SPLIT
SplitAction:INIT,ELSE,SPLIT
SplitAction:FOR_BODY_IN,IF,SPLIT
SplitAction:FOR_REFRESH_END,IF,SPLIT
SplitAction:FOR_REFRESH_IN,IF,SPLIT
SplitAction:FOR_CONDITION_IN,IF,SPLIT
SplitAction:FOR_INIT_IN,IF,SPLIT
SplitAction:WHILE_BLOCK_IN,IF,SPLIT
SplitAction:WHILE_CASE_OUT,IF,SPLIT
SplitAction:WHILE_CASE_IN,IF,SPLIT
SplitAction:ELSE_BLOCK_IN,IF,SPLIT
SplitAction:ELIF_BLOCK_OUT,IF,SPLIT
SplitAction:ELIF_BLOCK_IN,IF,SPLIT
SplitAction:ELIF_CASE_OUT,IF,SPLIT
SplitAction:ELIF_CASE_IN,IF,SPLIT
SplitAction:IF_BLOCK_OUT,IF,SPLIT
SplitAction:IF_BLOCK_IN,IF,SPLIT
SplitAction:IF_CASE_OUT,IF,SPLIT
SplitAction:IF_CASE_IN,IF,SPLIT
SplitAction:DO_WHILE_CASE_OUT,IF,SPLIT
SplitAction:DO_WHILE_CASE_IN,IF,SPLIT
SplitAction:DO_WHILE_BLOCK_OUT,IF,SPLIT
SplitAction:DO_WHILE_BLOCK_IN,IF,SPLIT
SplitAction:LEFTPAR,IF,SPLIT
SplitAction:LEFTBRA,IF,SPLIT
SplitAction:SENTENCE_IN,IF,SPLIT
SplitAction:BLOCK_IN,IF,SPLIT
SplitAction:WHILE_OF_DO,IF,SPLIT
SplitAction:FOR_SYMBOL,IF,SPLIT
SplitAction:DO_SYMBOL,IF,SPLIT
SplitAction:WHILE_SYMBOL,IF,SPLIT
SplitAction:ELSE_SYMBOL,IF,SPLIT
SplitAction:ELIF_SYMBOL,IF,SPLIT
SplitAction:IF_SYMBOL,IF,SPLIT
SplitAction:INIT,IF,SPLIT
SplitAction:INIT,LEFT_BRACE,SPLIT
set defaultAction StackPushAction
NOT_DEFINE
syntax add StackPushAction -n 152
StackPushAction:FOR_REFRESH_IN,LEFT_PAR,LEFTPAR
StackPushAction:FOR_REFRESH_IN,LEFT_BRACE,LEFTBRA
StackPushAction:FOR_CONDITION_IN,LEFT_PAR,LEFTPAR
StackPushAction:FOR_CONDITION_IN,LEFT_BRACE,LEFTBRA
StackPushAction:FOR_INIT_IN,LEFT_PAR,LEFTPAR
StackPushAction:FOR_INIT_IN,LEFT_BRACE,LEFTBRA
StackPushAction:FOR_REFRESH_END,LEFT_BRACE,FOR_BODY_IN
StackPushAction:FOR_REFRESH_IN,RIGHT_PAR,FOR_REFRESH_END
StackPushAction:FOR_CONDITION_IN,SEMICOLON,FOR_REFRESH_IN
StackPushAction:FOR_INIT_IN,SEMICOLON,FOR_CONDITION_IN
StackPushAction:FOR_SYMBOL,LEFT_PAR,FOR_INIT_IN
StackPushAction:FOR_BODY_IN,FOR,FOR_SYMBOL
StackPushAction:WHILE_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:DO_WHILE_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:ELSE_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:ELIF_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:IF_BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:BLOCK_IN,FOR,FOR_SYMBOL
StackPushAction:DO_WHILE_CASE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:DO_WHILE_CASE_IN,LEFT_PAR,LEFTPAR
StackPushAction:DO_WHILE_CASE_IN,RIGHT_PAR,DO_WHILE_CASE_OUT
StackPushAction:WHILE_OF_DO,LEFT_PAR,DO_WHILE_CASE_IN
StackPushAction:DO_WHILE_BLOCK_OUT,WHILE,WHILE_OF_DO
StackPushAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,DO_WHILE_BLOCK_OUT
StackPushAction:DO_SYMBOL,LEFT_BRACE,DO_WHILE_BLOCK_IN
StackPushAction:FOR_BODY_IN,DO,DO_SYMBOL
StackPushAction:DO_WHILE_CASE_IN,DO,DO_SYMBOL
StackPushAction:WHILE_BLOCK_IN,DO,DO_SYMBOL
StackPushAction:ELSE_BLOCK_IN,DO,DO_SYMBOL
StackPushAction:ELIF_BLOCK_IN,DO,DO_SYMBOL
StackPushAction:IF_BLOCK_IN,DO,DO_SYMBOL
StackPushAction:BLOCK_IN,DO,DO_SYMBOL
StackPushAction:WHILE_CASE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:WHILE_CASE_IN,LEFT_PAR,LEFTPAR
StackPushAction:WHILE_CASE_OUT,LEFT_BRACE,WHILE_BLOCK_IN
StackPushAction:WHILE_CASE_IN,RIGHT_PAR,WHILE_CASE_OUT
StackPushAction:WHILE_SYMBOL,LEFT_PAR,WHILE_CASE_IN
StackPushAction:FOR_BODY_IN,WHILE,WHILE_SYMBOL
StackPushAction:WHILE_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:DO_WHILE_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:ELSE_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:ELIF_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:IF_BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:BLOCK_IN,WHILE,WHILE_SYMBOL
StackPushAction:ELSE_SYMBOL,LEFT_BRACE,ELSE_BLOCK_IN
StackPushAction:ELIF_BLOCK_OUT,ELSE,ELSE_SYMBOL
StackPushAction:IF_BLOCK_OUT,ELSE,ELSE_SYMBOL
StackPushAction:ELIF_CASE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:ELIF_CASE_IN,LEFT_PAR,LEFTPAR
StackPushAction:ELIF_BLOCK_IN,RIGHT_BRACE,ELIF_BLOCK_OUT
StackPushAction:ELIF_CASE_OUT,LEFT_BRACE,ELIF_BLOCK_IN
StackPushAction:ELIF_CASE_IN,RIGHT_PAR,ELIF_CASE_OUT
StackPushAction:ELIF_SYMBOL,LEFT_PAR,ELIF_CASE_IN
StackPushAction:IF_BLOCK_OUT,ELIF,ELIF_SYMBOL
StackPushAction:IF_CASE_IN,LEFT_PAR,LEFTPAR
StackPushAction:IF_CASE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:IF_BLOCK_IN,RIGHT_BRACE,IF_BLOCK_OUT
StackPushAction:IF_CASE_OUT,LEFT_BRACE,IF_BLOCK_IN
StackPushAction:IF_CASE_IN,RIGHT_PAR,IF_CASE_OUT
StackPushAction:IF_SYMBOL,LEFT_PAR,IF_CASE_IN
StackPushAction:WHILE_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:DO_WHILE_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:FOR_BODY_IN,IF,IF_SYMBOL
StackPushAction:ELSE_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:ELIF_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:IF_BLOCK_IN,IF,IF_SYMBOL
StackPushAction:BLOCK_IN,IF,IF_SYMBOL
StackPushAction:WHILE_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:DO_WHILE_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:FOR_BODY_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:ELSE_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:ELIF_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:IF_BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:BLOCK_IN,LEFT_BRACE,BLOCK_IN
StackPushAction:INIT,LEFT_BRACE,BLOCK_IN
StackPushAction:LEFTBRA,LEFT_BRACE,LEFTBRA
StackPushAction:LEFTPAR,LEFT_BRACE,LEFTBRA
StackPushAction:LEFTBRA,LEFT_PAR,LEFTPAR
StackPushAction:LEFTPAR,LEFT_PAR,LEFTPAR
StackPushAction:SENTENCE_IN,LEFT_PAR,LEFTPAR
StackPushAction:SENTENCE_IN,LEFT_BRACE,LEFTBRA
StackPushAction:ELIF_BLOCK_OUT,CONST_KEYWORD,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,OP,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,BREAK,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,CONTINUE,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,RETURN,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,VAR,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,FUNC,SENTENCE_IN
StackPushAction:ELIF_BLOCK_OUT,TYPE,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,CONST_KEYWORD,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,OP,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,BREAK,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,CONTINUE,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,RETURN,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,VAR,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,FUNC,SENTENCE_IN
StackPushAction:IF_BLOCK_OUT,TYPE,SENTENCE_IN
StackPushAction:FOR_BODY_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:FOR_BODY_IN,OP,SENTENCE_IN
StackPushAction:FOR_BODY_IN,BREAK,SENTENCE_IN
StackPushAction:FOR_BODY_IN,RETURN,SENTENCE_IN
StackPushAction:FOR_BODY_IN,CONTINUE,SENTENCE_IN
StackPushAction:FOR_BODY_IN,FUNC,SENTENCE_IN
StackPushAction:FOR_BODY_IN,VAR,SENTENCE_IN
StackPushAction:FOR_BODY_IN,TYPE,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:DO_WHILE_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:WHILE_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:ELSE_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:ELIF_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,OP,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:IF_BLOCK_IN,TYPE,SENTENCE_IN
StackPushAction:BLOCK_IN,CONST_KEYWORD,SENTENCE_IN
StackPushAction:BLOCK_IN,OP,SENTENCE_IN
StackPushAction:BLOCK_IN,BREAK,SENTENCE_IN
StackPushAction:BLOCK_IN,CONTINUE,SENTENCE_IN
StackPushAction:BLOCK_IN,RETURN,SENTENCE_IN
StackPushAction:BLOCK_IN,FUNC,SENTENCE_IN
StackPushAction:BLOCK_IN,VAR,SENTENCE_IN
StackPushAction:BLOCK_IN,TYPE,SENTENCE_IN
action add StackPopAction
Pop Nop
set defaultAction StackPopAction
Pop
syntax add StackPopAction -n 366
StackPopAction:FOR_REFRESH_IN,RIGHT_PAR,Pop
StackPopAction:FOR_REFRESH_IN,UNKNOWN,Nop
StackPopAction:FOR_REFRESH_IN,FUNC,Nop
StackPopAction:FOR_REFRESH_IN,COMMA,Nop
StackPopAction:FOR_REFRESH_IN,SEMICOLON,Nop
StackPopAction:FOR_REFRESH_IN,RIGHT_BRACE,Nop
StackPopAction:FOR_REFRESH_IN,LEFT_BRACE,Nop
StackPopAction:FOR_REFRESH_IN,RIGHT_BRACKET,Nop
StackPopAction:FOR_REFRESH_IN,LEFT_BRACKET,Nop
StackPopAction:FOR_REFRESH_IN,LEFT_PAR,Nop
StackPopAction:FOR_REFRESH_IN,OP,Nop
StackPopAction:FOR_REFRESH_IN,CONTINUE,Nop
StackPopAction:FOR_REFRESH_IN,BREAK,Nop
StackPopAction:FOR_REFRESH_IN,RETURN,Nop
StackPopAction:FOR_REFRESH_IN,FOR,Nop
StackPopAction:FOR_REFRESH_IN,WHILE,Nop
StackPopAction:FOR_REFRESH_IN,DO,Nop
StackPopAction:FOR_REFRESH_IN,ELSE,Nop
StackPopAction:FOR_REFRESH_IN,ELIF,Nop
StackPopAction:FOR_REFRESH_IN,IF,Nop
StackPopAction:FOR_REFRESH_IN,CONST_KEYWORD,Nop
StackPopAction:FOR_REFRESH_IN,VAR,Nop
StackPopAction:FOR_REFRESH_IN,CONST,Nop
StackPopAction:FOR_REFRESH_IN,TYPE,Nop
StackPopAction:FOR_CONDITION_IN,SEMICOLON,Pop
StackPopAction:FOR_CONDITION_IN,UNKNOWN,Nop
StackPopAction:FOR_CONDITION_IN,FUNC,Nop
StackPopAction:FOR_CONDITION_IN,COMMA,Nop
StackPopAction:FOR_CONDITION_IN,RIGHT_BRACE,Nop
StackPopAction:FOR_CONDITION_IN,LEFT_BRACE,Nop
StackPopAction:FOR_CONDITION_IN,RIGHT_BRACKET,Nop
StackPopAction:FOR_CONDITION_IN,LEFT_BRACKET,Nop
StackPopAction:FOR_CONDITION_IN,RIGHT_PAR,Nop
StackPopAction:FOR_CONDITION_IN,LEFT_PAR,Nop
StackPopAction:FOR_CONDITION_IN,OP,Nop
StackPopAction:FOR_CONDITION_IN,CONTINUE,Nop
StackPopAction:FOR_CONDITION_IN,BREAK,Nop
StackPopAction:FOR_CONDITION_IN,RETURN,Nop
StackPopAction:FOR_CONDITION_IN,FOR,Nop
StackPopAction:FOR_CONDITION_IN,WHILE,Nop
StackPopAction:FOR_CONDITION_IN,DO,Nop
StackPopAction:FOR_CONDITION_IN,ELSE,Nop
StackPopAction:FOR_CONDITION_IN,ELIF,Nop
StackPopAction:FOR_CONDITION_IN,IF,Nop
StackPopAction:FOR_CONDITION_IN,CONST_KEYWORD,Nop
StackPopAction:FOR_CONDITION_IN,VAR,Nop
StackPopAction:FOR_CONDITION_IN,CONST,Nop
StackPopAction:FOR_CONDITION_IN,TYPE,Nop
StackPopAction:FOR_INIT_IN,SEMICOLON,Pop
StackPopAction:FOR_INIT_IN,UNKNOWN,Nop
StackPopAction:FOR_INIT_IN,FUNC,Nop
StackPopAction:FOR_INIT_IN,COMMA,Nop
StackPopAction:FOR_INIT_IN,RIGHT_BRACE,Nop
StackPopAction:FOR_INIT_IN,LEFT_BRACE,Nop
StackPopAction:FOR_INIT_IN,RIGHT_BRACKET,Nop
StackPopAction:FOR_INIT_IN,LEFT_BRACKET,Nop
StackPopAction:FOR_INIT_IN,RIGHT_PAR,Nop
StackPopAction:FOR_INIT_IN,LEFT_PAR,Nop
StackPopAction:FOR_INIT_IN,OP,Nop
StackPopAction:FOR_INIT_IN,CONTINUE,Nop
StackPopAction:FOR_INIT_IN,BREAK,Nop
StackPopAction:FOR_INIT_IN,RETURN,Nop
StackPopAction:FOR_INIT_IN,FOR,Nop
StackPopAction:FOR_INIT_IN,WHILE,Nop
StackPopAction:FOR_INIT_IN,DO,Nop
StackPopAction:FOR_INIT_IN,ELSE,Nop
StackPopAction:FOR_INIT_IN,ELIF,Nop
StackPopAction:FOR_INIT_IN,IF,Nop
StackPopAction:FOR_INIT_IN,CONST_KEYWORD,Nop
StackPopAction:FOR_INIT_IN,VAR,Nop
StackPopAction:FOR_INIT_IN,CONST,Nop
StackPopAction:FOR_INIT_IN,TYPE,Nop
StackPopAction:FOR_BODY_IN,RIGHT_BRACE,Pop
StackPopAction:FOR_BODY_IN,FOR,Nop
StackPopAction:WHILE_BLOCK_IN,FOR,Nop
StackPopAction:DO_WHILE_BLOCK_IN,FOR,Nop
StackPopAction:ELSE_BLOCK_IN,FOR,Nop
StackPopAction:ELIF_BLOCK_IN,FOR,Nop
StackPopAction:IF_BLOCK_IN,FOR,Nop
StackPopAction:BLOCK_IN,FOR,Nop
StackPopAction:DO_WHILE_CASE_IN,RIGHT_PAR,Pop
StackPopAction:DO_WHILE_CASE_IN,UNKNOWN,Nop
StackPopAction:DO_WHILE_CASE_IN,FUNC,Nop
StackPopAction:DO_WHILE_CASE_IN,COMMA,Nop
StackPopAction:DO_WHILE_CASE_IN,SEMICOLON,Nop
StackPopAction:DO_WHILE_CASE_IN,RIGHT_BRACE,Nop
StackPopAction:DO_WHILE_CASE_IN,LEFT_BRACE,Nop
StackPopAction:DO_WHILE_CASE_IN,RIGHT_BRACKET,Nop
StackPopAction:DO_WHILE_CASE_IN,LEFT_BRACKET,Nop
StackPopAction:DO_WHILE_CASE_IN,LEFT_PAR,Nop
StackPopAction:DO_WHILE_CASE_IN,OP,Nop
StackPopAction:DO_WHILE_CASE_IN,CONTINUE,Nop
StackPopAction:DO_WHILE_CASE_IN,BREAK,Nop
StackPopAction:DO_WHILE_CASE_IN,RETURN,Nop
StackPopAction:DO_WHILE_CASE_IN,FOR,Nop
StackPopAction:DO_WHILE_CASE_IN,WHILE,Nop
StackPopAction:DO_WHILE_CASE_IN,DO,Nop
StackPopAction:DO_WHILE_CASE_IN,ELSE,Nop
StackPopAction:DO_WHILE_CASE_IN,ELIF,Nop
StackPopAction:DO_WHILE_CASE_IN,IF,Nop
StackPopAction:DO_WHILE_CASE_IN,CONST_KEYWORD,Nop
StackPopAction:DO_WHILE_CASE_IN,VAR,Nop
StackPopAction:DO_WHILE_CASE_IN,CONST,Nop
StackPopAction:DO_WHILE_CASE_IN,TYPE,Nop
StackPopAction:DO_WHILE_CASE_OUT,SEMICOLON,Pop
StackPopAction:FOR_BODY_IN,DO,Nop
StackPopAction:DO_WHILE_BLOCK_IN,DO,Nop
StackPopAction:WHILE_BLOCK_IN,DO,Nop
StackPopAction:ELSE_BLOCK_IN,DO,Nop
StackPopAction:ELIF_BLOCK_IN,DO,Nop
StackPopAction:IF_BLOCK_IN,DO,Nop
StackPopAction:BLOCK_IN,DO,Nop
StackPopAction:WHILE_CASE_IN,RIGHT_PAR,Pop
StackPopAction:WHILE_CASE_IN,UNKNOWN,Nop
StackPopAction:WHILE_CASE_IN,FUNC,Nop
StackPopAction:WHILE_CASE_IN,COMMA,Nop
StackPopAction:WHILE_CASE_IN,SEMICOLON,Nop
StackPopAction:WHILE_CASE_IN,RIGHT_BRACE,Nop
StackPopAction:WHILE_CASE_IN,LEFT_BRACE,Nop
StackPopAction:WHILE_CASE_IN,RIGHT_BRACKET,Nop
StackPopAction:WHILE_CASE_IN,LEFT_BRACKET,Nop
StackPopAction:WHILE_CASE_IN,LEFT_PAR,Nop
StackPopAction:WHILE_CASE_IN,OP,Nop
StackPopAction:WHILE_CASE_IN,CONTINUE,Nop
StackPopAction:WHILE_CASE_IN,BREAK,Nop
StackPopAction:WHILE_CASE_IN,RETURN,Nop
StackPopAction:WHILE_CASE_IN,FOR,Nop
StackPopAction:WHILE_CASE_IN,WHILE,Nop
StackPopAction:WHILE_CASE_IN,DO,Nop
StackPopAction:WHILE_CASE_IN,ELSE,Nop
StackPopAction:WHILE_CASE_IN,ELIF,Nop
StackPopAction:WHILE_CASE_IN,IF,Nop
StackPopAction:WHILE_CASE_IN,CONST_KEYWORD,Nop
StackPopAction:WHILE_CASE_IN,VAR,Nop
StackPopAction:WHILE_CASE_IN,CONST,Nop
StackPopAction:WHILE_CASE_IN,TYPE,Nop
StackPopAction:WHILE_BLOCK_IN,RIGHT_BRACE,Pop
StackPopAction:FOR_BODY_IN,WHILE,Nop
StackPopAction:WHILE_BLOCK_IN,WHILE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,WHILE,Nop
StackPopAction:ELSE_BLOCK_IN,WHILE,Nop
StackPopAction:ELIF_BLOCK_IN,WHILE,Nop
StackPopAction:IF_BLOCK_IN,WHILE,Nop
StackPopAction:BLOCK_IN,WHILE,Nop
StackPopAction:ELSE_BLOCK_IN,RIGHT_BRACE,Pop
StackPopAction:ELIF_CASE_IN,RIGHT_PAR,Pop
StackPopAction:ELIF_CASE_IN,UNKNOWN,Nop
StackPopAction:ELIF_CASE_IN,FUNC,Nop
StackPopAction:ELIF_CASE_IN,COMMA,Nop
StackPopAction:ELIF_CASE_IN,SEMICOLON,Nop
StackPopAction:ELIF_CASE_IN,RIGHT_BRACE,Nop
StackPopAction:ELIF_CASE_IN,LEFT_BRACE,Nop
StackPopAction:ELIF_CASE_IN,RIGHT_BRACKET,Nop
StackPopAction:ELIF_CASE_IN,LEFT_BRACKET,Nop
StackPopAction:ELIF_CASE_IN,LEFT_PAR,Nop
StackPopAction:ELIF_CASE_IN,OP,Nop
StackPopAction:ELIF_CASE_IN,CONTINUE,Nop
StackPopAction:ELIF_CASE_IN,BREAK,Nop
StackPopAction:ELIF_CASE_IN,RETURN,Nop
StackPopAction:ELIF_CASE_IN,FOR,Nop
StackPopAction:ELIF_CASE_IN,WHILE,Nop
StackPopAction:ELIF_CASE_IN,DO,Nop
StackPopAction:ELIF_CASE_IN,ELSE,Nop
StackPopAction:ELIF_CASE_IN,ELIF,Nop
StackPopAction:ELIF_CASE_IN,IF,Nop
StackPopAction:ELIF_CASE_IN,CONST_KEYWORD,Nop
StackPopAction:ELIF_CASE_IN,VAR,Nop
StackPopAction:ELIF_CASE_IN,CONST,Nop
StackPopAction:ELIF_CASE_IN,TYPE,Nop
StackPopAction:IF_CASE_IN,RIGHT_PAR,Pop
StackPopAction:IF_CASE_IN,UNKNOWN,Nop
StackPopAction:IF_CASE_IN,FUNC,Nop
StackPopAction:IF_CASE_IN,COMMA,Nop
StackPopAction:IF_CASE_IN,SEMICOLON,Nop
StackPopAction:IF_CASE_IN,RIGHT_BRACE,Nop
StackPopAction:IF_CASE_IN,LEFT_BRACE,Nop
StackPopAction:IF_CASE_IN,RIGHT_BRACKET,Nop
StackPopAction:IF_CASE_IN,LEFT_BRACKET,Nop
StackPopAction:IF_CASE_IN,LEFT_PAR,Nop
StackPopAction:IF_CASE_IN,OP,Nop
StackPopAction:IF_CASE_IN,CONTINUE,Nop
StackPopAction:IF_CASE_IN,BREAK,Nop
StackPopAction:IF_CASE_IN,RETURN,Nop
StackPopAction:IF_CASE_IN,FOR,Nop
StackPopAction:IF_CASE_IN,WHILE,Nop
StackPopAction:IF_CASE_IN,DO,Nop
StackPopAction:IF_CASE_IN,ELSE,Nop
StackPopAction:IF_CASE_IN,ELIF,Nop
StackPopAction:IF_CASE_IN,IF,Nop
StackPopAction:IF_CASE_IN,CONST_KEYWORD,Nop
StackPopAction:IF_CASE_IN,VAR,Nop
StackPopAction:IF_CASE_IN,CONST,Nop
StackPopAction:IF_CASE_IN,TYPE,Nop
StackPopAction:WHILE_BLOCK_IN,IF,Nop
StackPopAction:DO_WHILE_BLOCK_IN,IF,Nop
StackPopAction:FOR_BODY_IN,IF,Nop
StackPopAction:ELSE_BLOCK_IN,IF,Nop
StackPopAction:ELIF_BLOCK_IN,IF,Nop
StackPopAction:IF_BLOCK_IN,IF,Nop
StackPopAction:BLOCK_IN,IF,Nop
StackPopAction:WHILE_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:FOR_BODY_IN,LEFT_BRACE,Nop
StackPopAction:ELSE_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:ELIF_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:IF_BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:BLOCK_IN,LEFT_BRACE,Nop
StackPopAction:INIT,UNKNOWN,Nop
StackPopAction:INIT,FUNC,Nop
StackPopAction:INIT,COMMA,Nop
StackPopAction:INIT,SEMICOLON,Nop
StackPopAction:INIT,RIGHT_BRACE,Nop
StackPopAction:INIT,LEFT_BRACE,Nop
StackPopAction:INIT,RIGHT_BRACKET,Nop
StackPopAction:INIT,LEFT_BRACKET,Nop
StackPopAction:INIT,RIGHT_PAR,Nop
StackPopAction:INIT,LEFT_PAR,Nop
StackPopAction:INIT,OP,Nop
StackPopAction:INIT,CONTINUE,Nop
StackPopAction:INIT,BREAK,Nop
StackPopAction:INIT,RETURN,Nop
StackPopAction:INIT,FOR,Nop
StackPopAction:INIT,WHILE,Nop
StackPopAction:INIT,DO,Nop
StackPopAction:INIT,ELSE,Nop
StackPopAction:INIT,ELIF,Nop
StackPopAction:INIT,IF,Nop
StackPopAction:INIT,CONST_KEYWORD,Nop
StackPopAction:INIT,VAR,Nop
StackPopAction:INIT,CONST,Nop
StackPopAction:INIT,TYPE,Nop
StackPopAction:LEFTPAR,RIGHT_PAR,Pop
StackPopAction:LEFTBRA,RIGHT_BRACE,Pop
StackPopAction:LEFTPAR,UNKNOWN,Nop
StackPopAction:LEFTPAR,FUNC,Nop
StackPopAction:LEFTPAR,COMMA,Nop
StackPopAction:LEFTPAR,SEMICOLON,Nop
StackPopAction:LEFTPAR,RIGHT_BRACE,Nop
StackPopAction:LEFTPAR,LEFT_BRACE,Nop
StackPopAction:LEFTPAR,RIGHT_BRACKET,Nop
StackPopAction:LEFTPAR,LEFT_BRACKET,Nop
StackPopAction:LEFTPAR,LEFT_PAR,Nop
StackPopAction:LEFTPAR,OP,Nop
StackPopAction:LEFTPAR,CONTINUE,Nop
StackPopAction:LEFTPAR,BREAK,Nop
StackPopAction:LEFTPAR,RETURN,Nop
StackPopAction:LEFTPAR,FOR,Nop
StackPopAction:LEFTPAR,WHILE,Nop
StackPopAction:LEFTPAR,DO,Nop
StackPopAction:LEFTPAR,ELSE,Nop
StackPopAction:LEFTPAR,ELIF,Nop
StackPopAction:LEFTPAR,IF,Nop
StackPopAction:LEFTPAR,CONST_KEYWORD,Nop
StackPopAction:LEFTPAR,VAR,Nop
StackPopAction:LEFTPAR,CONST,Nop
StackPopAction:LEFTPAR,TYPE,Nop
StackPopAction:LEFTBRA,UNKNOWN,Nop
StackPopAction:LEFTBRA,FUNC,Nop
StackPopAction:LEFTBRA,COMMA,Nop
StackPopAction:LEFTBRA,SEMICOLON,Nop
StackPopAction:LEFTBRA,LEFT_BRACE,Nop
StackPopAction:LEFTBRA,RIGHT_BRACKET,Nop
StackPopAction:LEFTBRA,LEFT_BRACKET,Nop
StackPopAction:LEFTBRA,RIGHT_PAR,Nop
StackPopAction:LEFTBRA,LEFT_PAR,Nop
StackPopAction:LEFTBRA,OP,Nop
StackPopAction:LEFTBRA,CONTINUE,Nop
StackPopAction:LEFTBRA,BREAK,Nop
StackPopAction:LEFTBRA,RETURN,Nop
StackPopAction:LEFTBRA,FOR,Nop
StackPopAction:LEFTBRA,WHILE,Nop
StackPopAction:LEFTBRA,DO,Nop
StackPopAction:LEFTBRA,ELSE,Nop
StackPopAction:LEFTBRA,ELIF,Nop
StackPopAction:LEFTBRA,IF,Nop
StackPopAction:LEFTBRA,CONST_KEYWORD,Nop
StackPopAction:LEFTBRA,VAR,Nop
StackPopAction:LEFTBRA,CONST,Nop
StackPopAction:LEFTBRA,TYPE,Nop
StackPopAction:SENTENCE_IN,SEMICOLON,Pop
StackPopAction:SENTENCE_IN,UNKNOWN,Nop
StackPopAction:SENTENCE_IN,FUNC,Nop
StackPopAction:SENTENCE_IN,COMMA,Nop
StackPopAction:SENTENCE_IN,RIGHT_BRACE,Nop
StackPopAction:SENTENCE_IN,LEFT_BRACE,Nop
StackPopAction:SENTENCE_IN,RIGHT_BRACKET,Nop
StackPopAction:SENTENCE_IN,LEFT_BRACKET,Nop
StackPopAction:SENTENCE_IN,RIGHT_PAR,Nop
StackPopAction:SENTENCE_IN,LEFT_PAR,Nop
StackPopAction:SENTENCE_IN,OP,Nop
StackPopAction:SENTENCE_IN,CONTINUE,Nop
StackPopAction:SENTENCE_IN,BREAK,Nop
StackPopAction:SENTENCE_IN,RETURN,Nop
StackPopAction:SENTENCE_IN,FOR,Nop
StackPopAction:SENTENCE_IN,WHILE,Nop
StackPopAction:SENTENCE_IN,DO,Nop
StackPopAction:SENTENCE_IN,ELSE,Nop
StackPopAction:SENTENCE_IN,ELIF,Nop
StackPopAction:SENTENCE_IN,IF,Nop
StackPopAction:SENTENCE_IN,CONST_KEYWORD,Nop
StackPopAction:SENTENCE_IN,VAR,Nop
StackPopAction:SENTENCE_IN,CONST,Nop
StackPopAction:SENTENCE_IN,TYPE,Nop
StackPopAction:FOR_BODY_IN,CONST_KEYWORD,Nop
StackPopAction:FOR_BODY_IN,OP,Nop
StackPopAction:FOR_BODY_IN,BREAK,Nop
StackPopAction:FOR_BODY_IN,RETURN,Nop
StackPopAction:FOR_BODY_IN,CONTINUE,Nop
StackPopAction:FOR_BODY_IN,FUNC,Nop
StackPopAction:FOR_BODY_IN,VAR,Nop
StackPopAction:FOR_BODY_IN,TYPE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:DO_WHILE_BLOCK_IN,OP,Nop
StackPopAction:DO_WHILE_BLOCK_IN,BREAK,Nop
StackPopAction:DO_WHILE_BLOCK_IN,RETURN,Nop
StackPopAction:DO_WHILE_BLOCK_IN,CONTINUE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,FUNC,Nop
StackPopAction:DO_WHILE_BLOCK_IN,VAR,Nop
StackPopAction:DO_WHILE_BLOCK_IN,TYPE,Nop
StackPopAction:WHILE_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:WHILE_BLOCK_IN,OP,Nop
StackPopAction:WHILE_BLOCK_IN,BREAK,Nop
StackPopAction:WHILE_BLOCK_IN,RETURN,Nop
StackPopAction:WHILE_BLOCK_IN,CONTINUE,Nop
StackPopAction:WHILE_BLOCK_IN,FUNC,Nop
StackPopAction:WHILE_BLOCK_IN,VAR,Nop
StackPopAction:WHILE_BLOCK_IN,TYPE,Nop
StackPopAction:ELSE_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:ELSE_BLOCK_IN,OP,Nop
StackPopAction:ELSE_BLOCK_IN,BREAK,Nop
StackPopAction:ELSE_BLOCK_IN,RETURN,Nop
StackPopAction:ELSE_BLOCK_IN,CONTINUE,Nop
StackPopAction:ELSE_BLOCK_IN,FUNC,Nop
StackPopAction:ELSE_BLOCK_IN,VAR,Nop
StackPopAction:ELSE_BLOCK_IN,TYPE,Nop
StackPopAction:ELIF_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:ELIF_BLOCK_IN,OP,Nop
StackPopAction:ELIF_BLOCK_IN,BREAK,Nop
StackPopAction:ELIF_BLOCK_IN,RETURN,Nop
StackPopAction:ELIF_BLOCK_IN,CONTINUE,Nop
StackPopAction:ELIF_BLOCK_IN,FUNC,Nop
StackPopAction:ELIF_BLOCK_IN,VAR,Nop
StackPopAction:ELIF_BLOCK_IN,TYPE,Nop
StackPopAction:IF_BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:IF_BLOCK_IN,OP,Nop
StackPopAction:IF_BLOCK_IN,BREAK,Nop
StackPopAction:IF_BLOCK_IN,RETURN,Nop
StackPopAction:IF_BLOCK_IN,CONTINUE,Nop
StackPopAction:IF_BLOCK_IN,FUNC,Nop
StackPopAction:IF_BLOCK_IN,VAR,Nop
StackPopAction:IF_BLOCK_IN,TYPE,Nop
StackPopAction:BLOCK_IN,CONST_KEYWORD,Nop
StackPopAction:BLOCK_IN,OP,Nop
StackPopAction:BLOCK_IN,BREAK,Nop
StackPopAction:BLOCK_IN,CONTINUE,Nop
StackPopAction:BLOCK_IN,RETURN,Nop
StackPopAction:BLOCK_IN,FUNC,Nop
StackPopAction:BLOCK_IN,VAR,Nop
StackPopAction:BLOCK_IN,TYPE,Nop
StackPopAction:DO_WHILE_BLOCK_IN,SEMICOLON,Nop
StackPopAction:WHILE_BLOCK_IN,SEMICOLON,Nop
StackPopAction:FOR_BODY_IN,SEMICOLON,Nop
StackPopAction:ELSE_BLOCK_IN,SEMICOLON,Nop
StackPopAction:ELIF_BLOCK_IN,SEMICOLON,Nop
StackPopAction:IF_BLOCK_IN,SEMICOLON,Nop
StackPopAction:BLOCK_IN,SEMICOLON,Nop
action add BlockAction
BlockIn BlockKeep BlockOut
set defaultAction BlockAction
BlockKeep
syntax add BlockAction -n 40
BlockAction:FOR_BODY_IN,RIGHT_BRACE,BlockOut
BlockAction:WHILE_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:ELSE_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:ELIF_BLOCK_IN,RIGHT_BRACE,BlockOut
BlockAction:IF_CASE_IN,RIGHT_BRACE,BlockOut
BlockAction:FOR_SYMBOL,LEFT_PAR,BlockIn
BlockAction:DO_SYMBOL,LEFT_BRACE,BlockIn
BlockAction:ELSE_SYMBOL,LEFT_BRACE,BlockIn
BlockAction:WHILE_CASE_OUT,LEFT_BRACE,BlockIn
BlockAction:ELIF_CASE_OUT,LEFT_BRACE,BlockIn
BlockAction:IF_CASE_OUT,LEFT_BRACE,BlockIn
BlockAction:FOR_REFRESH_END,LEFT_BRACE,BlockKeep
BlockAction:SENTENCE_IN,LEFT_BRACE,BlockKeep
BlockAction:LEFTPAR,LEFT_BRACE,BlockKeep
BlockAction:LEFTBRA,LEFT_BRACE,BlockKeep
BlockAction:FOR_BODY_IN,LEFT_BRACE,BlockIn
BlockAction:FOR_REFRESH_IN,LEFT_BRACE,BlockIn
BlockAction:FOR_CONDITION_IN,LEFT_BRACE,BlockIn
BlockAction:FOR_INIT_IN,LEFT_BRACE,BlockIn
BlockAction:WHILE_BLOCK_IN,LEFT_BRACE,BlockIn
BlockAction:WHILE_CASE_IN,LEFT_BRACE,BlockIn
BlockAction:ELSE_BLOCK_IN,LEFT_BRACE,BlockIn
BlockAction:ELIF_BLOCK_OUT,LEFT_BRACE,BlockIn
BlockAction:ELIF_BLOCK_IN,LEFT_BRACE,BlockIn
BlockAction:ELIF_CASE_IN,LEFT_BRACE,BlockIn
BlockAction:IF_BLOCK_OUT,LEFT_BRACE,BlockIn
BlockAction:IF_BLOCK_IN,LEFT_BRACE,BlockIn
BlockAction:IF_CASE_IN,LEFT_BRACE,BlockIn
BlockAction:DO_WHILE_CASE_OUT,LEFT_BRACE,BlockIn
BlockAction:DO_WHILE_CASE_IN,LEFT_BRACE,BlockIn
BlockAction:DO_WHILE_BLOCK_OUT,LEFT_BRACE,BlockIn
BlockAction:DO_WHILE_BLOCK_IN,LEFT_BRACE,BlockIn
BlockAction:BLOCK_IN,LEFT_BRACE,BlockIn
BlockAction:WHILE_OF_DO,LEFT_BRACE,BlockIn
BlockAction:FOR_SYMBOL,LEFT_BRACE,BlockIn
BlockAction:WHILE_SYMBOL,LEFT_BRACE,BlockIn
BlockAction:ELIF_SYMBOL,LEFT_BRACE,BlockIn
BlockAction:IF_SYMBOL,LEFT_BRACE,BlockIn
BlockAction:INIT,LEFT_BRACE,BlockIn
action add PrintAction
PRINTENTER PRINTSPACE
set defaultAction PrintAction
PRINTSPACE
syntax add PrintAction -n 26
PrintAction:DO_WHILE_CASE_OUT,SEMICOLON,PRINTENTER
PrintAction:DO_WHILE_CASE_IN,RIGHT_PAR,PRINTSPACE
PrintAction:ELSE_SYMBOL,LEFT_BRACE,PRINTENTER
PrintAction:DO_SYMBOL,LEFT_BRACE,PRINTENTER
PrintAction:FOR_REFRESH_END,LEFT_BRACE,PRINTENTER
PrintAction:WHILE_CASE_IN,RIGHT_PAR,PRINTENTER
PrintAction:ELIF_CASE_IN,RIGHT_PAR,PRINTENTER
PrintAction:IF_CASE_IN,RIGHT_PAR,PRINTENTER
PrintAction:BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:WHILE_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:FOR_BODY_IN,RIGHT_BRACE,PRINTENTER
PrintAction:ELSE_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:ELIF_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:IF_BLOCK_IN,RIGHT_BRACE,PRINTENTER
PrintAction:ELIF_CASE_OUT,LEFT_BRACE,PRINTENTER
PrintAction:IF_CASE_OUT,LEFT_BRACE,PRINTENTER
PrintAction:FOR_BODY_IN,LEFT_BRACE,PRINTENTER
PrintAction:DO_WHILE_BLOCK_IN,LEFT_BRACE,PRINTENTER
PrintAction:WHILE_BLOCK_IN,LEFT_BRACE,PRINTENTER
PrintAction:ELSE_BLOCK_IN,LEFT_BRACE,PRINTENTER
PrintAction:ELIF_BLOCK_IN,LEFT_BRACE,PRINTENTER
PrintAction:IF_BLOCK_IN,LEFT_BRACE,PRINTENTER
PrintAction:BLOCK_IN,LEFT_BRACE,PRINTENTER
PrintAction:INIT,LEFT_BRACE,PRINTENTER
PrintAction:SENTENCE_IN,SEMICOLON,PRINTENTER
