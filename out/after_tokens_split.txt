{	1
for	1
(	2
int i = 1	2
;	2
i < 10	2
;	2
i ++	2
)	2
{	2
int m = i	2
;	1
}	1
printf ( "%s" , mm )	1
;	0
}	0
{	1
void ( * pp ) ( enum score_level* , struct student* )	1
;	0
}	0
{	0
}	0
{	1
void ( * p ) ( int )	1
;	1
* a = * a + * b	1
;	1
* b = * a - * b	1
;	1
* a = * a - * b	1
;	0
}	0
{	1
return score	1
;	0
}	0
{	1
printf ( "my name is:%s,my socre is:%f,my age is:%d" , name , getScore ( ) , age )	1
;	0
}	0
{	1
return	1
;	0
}	0
{	1
if	1
(	1
score >= 33	1
)	1
{	2
return GOOD	2
;	1
}	1
else if	1
(	1
score == 22	1
)	1
{	2
score ++	2
;	2
return NORMAL	2
;	1
}	1
else	1
{	2
return BAD	2
;	1
}	0
}	0
{	1
do	1
{	2
int a = 1	2
;	1
}	1
while	1
(	1
0	1
)	1
;	1
for	1
(	2
int i = 0	2
;	2
i < a	2
;	2
i ++	2
)	2
{	2
while	2
(	2
i < 2 * a	2
)	2
{	3
do	3
{	4
int j = i	4
;	3
}	3
while	3
(	3
j < 2	3
)	3
;	2
}	1
}	1
int a = 1	1
;	1
if	1
(	1
a > 1	1
)	1
{	2
for	2
(	3
int i = 0	3
;	3
i < a	3
;	3
i ++	3
)	3
{	3
while	3
(	3
i < 2 * a	3
)	3
{	4
do	4
{	5
int j = i	5
;	4
}	4
while	4
(	4
j < 2	4
)	4
;	3
}	2
}	1
}	1
struct student stu1	1
;	1
union multiData md	1
;	1
const int m = 5	1
;	1
typedef int MyInt	1
;	1
MyInt th	1
;	1
typedef union multiData MD	1
;	1
enum score_level L	1
;	1
printf ( "N=M=%d" , 3 )	1
;	1
stu1 . selfIntroduce ( )	1
;	1
LEVEL level = judLevel ( stu1 )	1
;	1
int a = 3	1
;	1
printf ( "student%s's score level is %d,he get %d pens!" , 3 , a )	1
;	1
return 1	1
;	0
}	0
