(left brace, {)
(function, strcpy)
(left parenthesis, ()
(self keyword, self)
(operation symbol, .)
(variable, name)
(comma, ,)
(variable, name)
(right parenthesis, ))
(semicolon, ;)
(right brace, })
(left brace, {)
(function, printf)
(left parenthesis, ()
(const value, "Hello,%s!")
(comma, ,)
(variable, helloTo)
(right parenthesis, ))
(semicolon, ;)
(right brace, })
(left brace, {)
(keyword for, for)
(left parenthesis, ()
(type, int)
(variable, i)
(operation symbol, =)
(const value, 1)
(comma, ,)
(type, int)
(variable, j)
(operation symbol, =)
(variable, b)
(semicolon, ;)
(variable, i)
(operation symbol, <)
(const value, 2)
(semicolon, ;)
(variable, i)
(operation symbol, ++)
(right parenthesis, ))
(left brace, {)
(semicolon, ;)
(right brace, })
(type, int)
(variable, a)
(comma, ,)
(variable, b)
(comma, ,)
(variable, c)
(semicolon, ;)
(variable, c)
(operation symbol, =)
(left parenthesis, ()
(type, int)
(right parenthesis, ))
(const value, 1)
(semicolon, ;)
(type, int)
(variable, a)
(operation symbol, =)
(const value, 1)
(comma, ,)
(variable, b)
(operation symbol, =)
(const value, 2)
(comma, ,)
(variable, c)
(operation symbol, =)
(const value, 3)
(semicolon, ;)
(type, People)
(variable, Mike)
(operation symbol, =)
(function, getPeople)
(left parenthesis, ()
(right parenthesis, ))
(semicolon, ;)
(type, People*)
(variable, mkp)
(operation symbol, =)
(operation symbol, &)
(variable, Mike)
(semicolon, ;)
(variable, mkp)
(operation symbol, ->)
(variable, age)
(operation symbol, =)
(const value, 1)
(semicolon, ;)
(variable, Mike)
(operation symbol, .)
(function, sayHello)
(left parenthesis, ()
(right parenthesis, ))
(semicolon, ;)
(keyword return, return)
(const value, 0)
(semicolon, ;)
(right brace, })
